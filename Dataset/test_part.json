[
    {
        "focal_src": "public static List < Milestone > findByProjectId(Long projectId) { return find.where().eq(\"projectId\", projectId).orderBy(\"dueDate\").findList(); } ",
        "focal_tgt": "public static List < Milestone > findByProjectId(Long projectId) { return Milestone.findMilestones(projectId, MilestoneState.ALL.state()); } ",
        "test_src": "@Test public void findByProjectId()throws Exception { List < Milestone > firstProjectMilestones = Milestone.findByProjectId(1l); assertThat(firstProjectMilestones.size()).isEqualTo(2); checkIfTheMilestoneIsBelongToTheProject(firstProjectMilestones, 1l, 2l); List < Milestone > secondProjectMilestones = Milestone.findByProjectId(2l); assertThat(secondProjectMilestones.size()).isEqualTo(2); checkIfTheMilestoneIsBelongToTheProject(secondProjectMilestones, 3l, 4l); } ",
        "label": 0,
        "focal_db": [
            2819082,
            "naver/yobi",
            "/data/comment_repos/naver@yobi",
            "96cf45d891fc61971c4218e4cb87de338433b655",
            "cd45468843916824deddcba1bf51577b3d67547e",
            "app/models/Milestone.java",
            "d951148fd12951a215f987546cbb73906f6b89ef",
            "app/models/Milestone.java",
            "public static List<Milestone> findByProjectId(Long projectId) {\n        return find.where()\n                .eq(\"projectId\", projectId)\n                .orderBy(\"dueDate\")\n                .findList();\n    }",
            "/**\n * \ubaa8\ub4e0 \ub9c8\uc77c\uc2a4\ud1a4\uc774 \uc644\ub8cc\uc77c \uc21c\uc11c\ub300\ub85c \ubcf4\uc778\ub2e4.\n *\n * @param projectId\n * @return\n */\n",
            "public static List<Milestone> findByProjectId(Long projectId) {\n        return Milestone.findMilestones(projectId, MilestoneState.ALL.state());\n    }",
            "/**\n * \ubaa8\ub4e0 \ub9c8\uc77c\uc2a4\ud1a4\uc774 \uc644\ub8cc\uc77c \uc21c\uc11c\ub300\ub85c \ubcf4\uc778\ub2e4.\n *\n * @param projectId\n * @return\n */\n"
        ],
        "test_db": [
            "a7e7d6f20e339fd0860d716599ebe16bcdc3643c",
            "naver/yobi",
            "/data/comment_repos/naver@yobi",
            "findByProjectId",
            "/data/comment_repos/naver@yobi/test/models/MilestoneTest.java",
            "findByProjectId",
            "    @Test\n    public void findByProjectId() throws Exception {\n        // Given\n        // When\n        List<Milestone> firstProjectMilestones = Milestone.findByProjectId(1l);\n        // Then\n        assertThat(firstProjectMilestones.size()).isEqualTo(2);\n        checkIfTheMilestoneIsBelongToTheProject(firstProjectMilestones, 1l, 2l);\n\n        // Given\n        // When\n        List<Milestone> secondProjectMilestones = Milestone.findByProjectId(2l);\n        // Then\n        assertThat(secondProjectMilestones.size()).isEqualTo(2);\n        checkIfTheMilestoneIsBelongToTheProject(secondProjectMilestones, 3l, 4l);\n    }",
            "public static List<Milestone> findByProjectId(Long projectId) {\n        return find.where().eq(\"projectId\", projectId).findList();\n    }",
            "app/models/Milestone.java",
            "public static List<Milestone> findByProjectId(Long projectId) {\n        return find.where()\n                .eq(\"projectId\", projectId)\n                .orderBy(\"dueDate\")\n                .findList();\n    }",
            "app/models/Milestone.java"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Milestone",
                "Milestone",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "find",
                "find",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Project",
                "Project",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Long",
                "Long",
                "equal"
            ],
            [
                "project",
                "project",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "find",
                "Milestone",
                "replace"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "",
                "find",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "where",
                "Milestones",
                "replace"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "project",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "Milestone",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "State",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "ALL",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "state",
                "insert"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "eq",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "project",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "project",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Id",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "order",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "By",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                "due",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Date",
                "",
                "delete"
            ],
            [
                "\"",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ".",
                "",
                "delete"
            ],
            [
                "find",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "List",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static int getWeekOfYear(final Date date) { Calendar cal = Calendar.getInstance(); cal.setTime(date); return cal.get(Calendar.WEEK_OF_YEAR); } ",
        "focal_tgt": "@Deprecated public static int getWeekOfYear(final Date date) { Calendar cal = Calendar.getInstance(); cal.setTime(date); return cal.get(Calendar.WEEK_OF_YEAR); } ",
        "test_src": "@Test public void getWeekOfYear() { assertEquals(18, TimeUtils.getValueByCalendarField(timeString, Calendar.WEEK_OF_YEAR)); assertEquals(18, TimeUtils.getValueByCalendarField(timeStringFormat, mFormat, Calendar.WEEK_OF_YEAR)); assertEquals(18, TimeUtils.getValueByCalendarField(timeDate, Calendar.WEEK_OF_YEAR)); assertEquals(18, TimeUtils.getValueByCalendarField(timeMillis, Calendar.WEEK_OF_YEAR)); } ",
        "label": 0,
        "focal_db": [
            1455274,
            "Blankj/AndroidUtilCode",
            "/data/comment_repos/Blankj@AndroidUtilCode",
            "28b04425082817a99e4e2e2c781d1d502078d22e",
            "e677aa669a53188320cfd7e626b8b9859e2e2dad",
            "utilcode/src/main/java/com/blankj/utilcode/util/TimeUtils.java",
            "aa8a26b5b24b2bb3206b78515f497846d0ef0cbc",
            "utilcode/src/main/java/com/blankj/utilcode/util/TimeUtils.java",
            "public static int getWeekOfYear(final Date date) {\n        Calendar cal = Calendar.getInstance();\n        cal.setTime(date);\n        return cal.get(Calendar.WEEK_OF_YEAR);\n    }",
            "/**\n * Return the number for indicating the week number within the current year.\n *\n * @param date The date.\n * @return the number for indicating the week number within the current year\n */\n",
            "@Deprecated\n    public static int getWeekOfYear(final Date date) {\n        Calendar cal = Calendar.getInstance();\n        cal.setTime(date);\n        return cal.get(Calendar.WEEK_OF_YEAR);\n    }",
            "/**\n * Return the number for indicating the week number within the current year.\n *\n * @param date The date.\n * @return the number for indicating the week number within the current year\n * @deprecated use {@link #getValueByCalendarField(Date, int)} instead,\n * the param of field should equals {@link Calendar#WEEK_OF_YEAR}\n */\n"
        ],
        "test_db": [
            "1fd55e5bd0c1311ac6689bb9a8d57712bdf90ec8",
            "Blankj/AndroidUtilCode",
            "/data/comment_repos/Blankj@AndroidUtilCode",
            "getWeekOfYear",
            "/data/comment_repos/Blankj@AndroidUtilCode/lib/utilcode/src/test/java/com/blankj/utilcode/util/TimeUtilsTest.java",
            "getWeekOfYear",
            "    @Test\n    public void getWeekOfYear() {\n        assertEquals(18, TimeUtils.getValueByCalendarField(timeString, Calendar.WEEK_OF_YEAR));\n        assertEquals(18, TimeUtils.getValueByCalendarField(timeStringFormat, mFormat, Calendar.WEEK_OF_YEAR));\n        assertEquals(18, TimeUtils.getValueByCalendarField(timeDate, Calendar.WEEK_OF_YEAR));\n        assertEquals(18, TimeUtils.getValueByCalendarField(timeMillis, Calendar.WEEK_OF_YEAR));\n    }",
            "public static int getWeekOfYear(String time, SimpleDateFormat format) {\r\n        Date date = string2Date(time, format);\r\n        return getWeekOfYear(date);\r\n    }",
            "utilcode/src/main/java/com/blankj/utilcode/utils/TimeUtils.java",
            "public static int getWeekOfYear(String time, String pattern) {\r\n        Date date = string2Date(time, pattern);\r\n        return getWeekOfYear(date);\r\n    }",
            "utilcode/src/main/java/com/blankj/utilcode/utils/TimeUtils.java"
        ],
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Deprecated",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Week",
                "Week",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Year",
                "Year",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "Date",
                "Date",
                "equal"
            ],
            [
                "date",
                "date",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Calendar",
                "Calendar",
                "equal"
            ],
            [
                "cal",
                "cal",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Calendar",
                "Calendar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Instance",
                "Instance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "cal",
                "cal",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "set",
                "set",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Time",
                "Time",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "date",
                "date",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "cal",
                "cal",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Calendar",
                "Calendar",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "WEEK",
                "WEEK",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "OF",
                "OF",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "YEAR",
                "YEAR",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "boolean parse() { int lineno; int charno; JSTypeExpression type; state = State.SEARCHING_ANNOTATION; skipEOLs(); JsDocToken token = next(); List < ExtendedTypeInfo > extendedTypes = Lists.newArrayList(); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo blockInfo = extractBlockComment(token); token = blockInfo.token; if( ! blockInfo.string.isEmpty()) { jsdocBuilder.recordBlockDescription(blockInfo.string); } } else { if(token != JsDocToken.ANNOTATION && token != JsDocToken.EOC) { jsdocBuilder.recordBlockDescription(\"\"); } } retry : for(; ; ) { switch(token) { case ANNOTATION : if(state == State.SEARCHING_ANNOTATION) { state = State.SEARCHING_NEWLINE; lineno = stream.getLineno(); charno = stream.getCharno(); String annotationName = stream.getString(); Annotation annotation = annotationNames.get(annotationName); if(annotation == null) { parser.addParserWarning(\"msg.bad.jsdoc.tag\", annotationName, stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.markAnnotation(annotationName, lineno, charno); switch(annotation) { case AUTHOR : if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo authorInfo = extractSingleLineBlock(); String author = authorInfo.string; if(author.length() == 0) { parser.addParserWarning(\"msg.jsdoc.authormissing\", stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.addAuthor(author); } token = authorInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case CONSISTENTIDGENERATOR : if( ! jsdocBuilder.recordConsistentIdGenerator()) { parser.addParserWarning(\"msg.jsdoc.consistidgen\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case CONSTANT : if( ! jsdocBuilder.recordConstancy()) { parser.addParserWarning(\"msg.jsdoc.const\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case STRUCT : if( ! jsdocBuilder.recordStruct()) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case DICT : if( ! jsdocBuilder.recordDict()) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case CONSTRUCTOR : if( ! jsdocBuilder.recordConstructor()) { if(jsdocBuilder.isInterfaceRecorded()) { parser.addTypeWarning(\"msg.jsdoc.interface.constructor\", stream.getLineno(), stream.getCharno()); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } } token = eatTokensUntilEOL(); continue retry; case DEPRECATED : if( ! jsdocBuilder.recordDeprecated()) { parser.addParserWarning(\"msg.jsdoc.deprecated\", stream.getLineno(), stream.getCharno()); } ExtractionInfo reasonInfo = extractMultilineTextualBlock(token); String reason = reasonInfo.string; if(reason.length() > 0) { jsdocBuilder.recordDeprecationReason(reason); } token = reasonInfo.token; continue retry; case INTERFACE : if( ! jsdocBuilder.recordInterface()) { if(jsdocBuilder.isConstructorRecorded()) { parser.addTypeWarning(\"msg.jsdoc.interface.constructor\", stream.getLineno(), stream.getCharno()); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } } token = eatTokensUntilEOL(); continue retry; case DESC : if(jsdocBuilder.isDescriptionRecorded()) { parser.addParserWarning(\"msg.jsdoc.desc.extra\", stream.getLineno(), stream.getCharno()); token = eatTokensUntilEOL(); continue retry; } else { ExtractionInfo descriptionInfo = extractMultilineTextualBlock(token); String description = descriptionInfo.string; jsdocBuilder.recordDescription(description); token = descriptionInfo.token; continue retry; } case FILE_OVERVIEW : String fileOverview = \"\"; if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo fileOverviewInfo = extractMultilineTextualBlock(token, WhitespaceOption.TRIM); fileOverview = fileOverviewInfo.string; token = fileOverviewInfo.token; } else { token = eatTokensUntilEOL(token); } if( ! jsdocBuilder.recordFileOverview(fileOverview)) { parser.addParserWarning(\"msg.jsdoc.fileoverview.extra\", stream.getLineno(), stream.getCharno()); } continue retry; case LICENSE : case PRESERVE : ExtractionInfo preserveInfo = extractMultilineTextualBlock(token, WhitespaceOption.PRESERVE); String preserve = preserveInfo.string; if(preserve.length() > 0) { if(fileLevelJsDocBuilder != null) { fileLevelJsDocBuilder.append(preserve); } } token = preserveInfo.token; continue retry; case ENUM : token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token != JsDocToken.EOL && token != JsDocToken.EOC) { type = createJSTypeExpression(parseAndRecordTypeNode(token)); } if(type == null) { type = createJSTypeExpression(newStringNode(\"number\")); } if( ! jsdocBuilder.recordEnumParameterType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } token = eatTokensUntilEOL(token); continue retry; case EXPORT : if( ! jsdocBuilder.recordExport()) { parser.addParserWarning(\"msg.jsdoc.export\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXPOSE : if( ! jsdocBuilder.recordExpose()) { parser.addParserWarning(\"msg.jsdoc.expose\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXTERNS : if( ! jsdocBuilder.recordExterns()) { parser.addParserWarning(\"msg.jsdoc.externs\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case JAVA_DISPATCH : if( ! jsdocBuilder.recordJavaDispatch()) { parser.addParserWarning(\"msg.jsdoc.javadispatch\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXTENDS : case IMPLEMENTS : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); boolean matchingRc = false; if(token == JsDocToken.LC) { token = next(); matchingRc = true; } if(token == JsDocToken.STRING) { Node typeNode = parseAndRecordTypeNameNode(token, lineno, charno, matchingRc); lineno = stream.getLineno(); charno = stream.getCharno(); typeNode = wrapNode(Token.BANG, typeNode); type = createJSTypeExpression(typeNode); if(annotation == Annotation.EXTENDS) { extendedTypes.add(new ExtendedTypeInfo(type, stream.getLineno(), stream.getCharno())); } else { Preconditions.checkState(annotation == Annotation.IMPLEMENTS); if( ! jsdocBuilder.recordImplementedInterface(type)) { parser.addTypeWarning(\"msg.jsdoc.implements.duplicate\", lineno, charno); } } token = next(); if(matchingRc) { if(token != JsDocToken.RC) { parser.addTypeWarning(\"msg.jsdoc.missing.rc\", stream.getLineno(), stream.getCharno()); } } else if(token != JsDocToken.EOL && token != JsDocToken.EOF && token != JsDocToken.EOC) { parser.addTypeWarning(\"msg.end.annotation.expected\", stream.getLineno(), stream.getCharno()); } } else { parser.addTypeWarning(\"msg.no.type.name\", lineno, charno); } token = eatTokensUntilEOL(token); continue retry; case HIDDEN : if( ! jsdocBuilder.recordHiddenness()) { parser.addParserWarning(\"msg.jsdoc.hidden\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case LENDS : skipEOLs(); matchingRc = false; if(match(JsDocToken.LC)) { token = next(); matchingRc = true; } if(match(JsDocToken.STRING)) { token = next(); if( ! jsdocBuilder.recordLends(stream.getString())) { parser.addTypeWarning(\"msg.jsdoc.lends.incompatible\", stream.getLineno(), stream.getCharno()); } } else { parser.addTypeWarning(\"msg.jsdoc.lends.missing\", stream.getLineno(), stream.getCharno()); } if(matchingRc && ! match(JsDocToken.RC)) { parser.addTypeWarning(\"msg.jsdoc.missing.rc\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case MEANING : ExtractionInfo meaningInfo = extractMultilineTextualBlock(token); String meaning = meaningInfo.string; token = meaningInfo.token; if( ! jsdocBuilder.recordMeaning(meaning)) { parser.addParserWarning(\"msg.jsdoc.meaning.extra\", stream.getLineno(), stream.getCharno()); } continue retry; case NO_ALIAS : if( ! jsdocBuilder.recordNoAlias()) { parser.addParserWarning(\"msg.jsdoc.noalias\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_COMPILE : if( ! jsdocBuilder.recordNoCompile()) { parser.addParserWarning(\"msg.jsdoc.nocompile\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_TYPE_CHECK : if( ! jsdocBuilder.recordNoTypeCheck()) { parser.addParserWarning(\"msg.jsdoc.nocheck\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NOT_IMPLEMENTED : token = eatTokensUntilEOL(); continue retry; case INHERIT_DOC : case OVERRIDE : if( ! jsdocBuilder.recordOverride()) { parser.addTypeWarning(\"msg.jsdoc.override\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case THROWS : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token == JsDocToken.LC) { type = createJSTypeExpression(parseAndRecordTypeNode(token)); if(type == null) { token = eatTokensUntilEOL(); continue retry; } } token = current(); jsdocBuilder.recordThrowType(type); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo descriptionInfo = extractMultilineTextualBlock(token); String description = descriptionInfo.string; if(description.length() > 0) { jsdocBuilder.recordThrowDescription(type, description); } token = descriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case PARAM : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token == JsDocToken.LC) { type = createJSTypeExpression(parseAndRecordParamTypeNode(token)); if(type == null) { token = eatTokensUntilEOL(); continue retry; } skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); } String name = null; boolean isBracketedParam = JsDocToken.LB == token; if(isBracketedParam) { token = next(); } if(JsDocToken.STRING != token) { parser.addTypeWarning(\"msg.missing.variable.name\", lineno, charno); } else { name = stream.getString(); if(isBracketedParam) { token = next(); if(JsDocToken.EQUALS == token) { token = next(); if(JsDocToken.STRING == token) { token = next(); } } if(JsDocToken.RB != token) { reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\"); } else if(type != null) { type = JSTypeExpression.makeOptionalArg(type); } } if(name.indexOf('.') > - 1) { name = null; } else if( ! jsdocBuilder.recordParameter(name, type)) { if(jsdocBuilder.hasParameter(name)) { parser.addTypeWarning(\"msg.dup.variable.name\", name, lineno, charno); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", name, lineno, charno); } } } if(name == null) { token = eatTokensUntilEOL(token); continue retry; } jsdocBuilder.markName(name, sourceFile, lineno, charno); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo paramDescriptionInfo = extractMultilineTextualBlock(token); String paramDescription = paramDescriptionInfo.string; if(paramDescription.length() > 0) { jsdocBuilder.recordParameterDescription(name, paramDescription); } token = paramDescriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case PRESERVE_TRY : if( ! jsdocBuilder.recordPreserveTry()) { parser.addParserWarning(\"msg.jsdoc.preservertry\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PRIVATE : if( ! jsdocBuilder.recordVisibility(Visibility.PRIVATE)) { parser.addParserWarning(\"msg.jsdoc.visibility.private\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PROTECTED : if( ! jsdocBuilder.recordVisibility(Visibility.PROTECTED)) { parser.addParserWarning(\"msg.jsdoc.visibility.protected\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PUBLIC : if( ! jsdocBuilder.recordVisibility(Visibility.PUBLIC)) { parser.addParserWarning(\"msg.jsdoc.visibility.public\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_SHADOW : if( ! jsdocBuilder.recordNoShadow()) { parser.addParserWarning(\"msg.jsdoc.noshadow\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_SIDE_EFFECTS : if( ! jsdocBuilder.recordNoSideEffects()) { parser.addParserWarning(\"msg.jsdoc.nosideeffects\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case MODIFIES : token = parseModifiesTag(next()); continue retry; case IMPLICIT_CAST : if( ! jsdocBuilder.recordImplicitCast()) { parser.addTypeWarning(\"msg.jsdoc.implicitcast\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case SEE : if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo referenceInfo = extractSingleLineBlock(); String reference = referenceInfo.string; if(reference.length() == 0) { parser.addParserWarning(\"msg.jsdoc.seemissing\", stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.addReference(reference); } token = referenceInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case SUPPRESS : token = parseSuppressTag(next()); continue retry; case TEMPLATE : ExtractionInfo templateInfo = extractSingleLineBlock(); List < String > names = Lists.newArrayList(Splitter.on(',').trimResults().split(templateInfo.string)); if(names.size() == 0 || names.get(0).length() == 0) { parser.addTypeWarning(\"msg.jsdoc.templatemissing\", stream.getLineno(), stream.getCharno()); } else if( ! jsdocBuilder.recordTemplateTypeNames(names)) { parser.addTypeWarning(\"msg.jsdoc.template.at.most.once\", stream.getLineno(), stream.getCharno()); } token = templateInfo.token; continue retry; case IDGENERATOR : if( ! jsdocBuilder.recordIdGenerator()) { parser.addParserWarning(\"msg.jsdoc.idgen\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case VERSION : ExtractionInfo versionInfo = extractSingleLineBlock(); String version = versionInfo.string; if(version.length() == 0) { parser.addParserWarning(\"msg.jsdoc.versionmissing\", stream.getLineno(), stream.getCharno()); } else { if( ! jsdocBuilder.recordVersion(version)) { parser.addParserWarning(\"msg.jsdoc.extraversion\", stream.getLineno(), stream.getCharno()); } } token = versionInfo.token; continue retry; case DEFINE : case RETURN : case THIS : case TYPE : case TYPEDEF : lineno = stream.getLineno(); charno = stream.getCharno(); Node typeNode = null; if( ! lookAheadForTypeAnnotation() && annotation == Annotation.RETURN) { typeNode = newNode(Token.QMARK); } else { skipEOLs(); token = next(); typeNode = parseAndRecordTypeNode(token); } if(annotation == Annotation.THIS) { typeNode = wrapNode(Token.BANG, typeNode); } type = createJSTypeExpression(typeNode); if(type == null) { } else { switch(annotation) { case DEFINE : if( ! jsdocBuilder.recordDefineType(type)) { parser.addParserWarning(\"msg.jsdoc.define\", lineno, charno); } break; case RETURN : if( ! jsdocBuilder.recordReturnType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); break; } if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo returnDescriptionInfo = extractMultilineTextualBlock(token); String returnDescription = returnDescriptionInfo.string; if(returnDescription.length() > 0) { jsdocBuilder.recordReturnDescription(returnDescription); } token = returnDescriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case THIS : if( ! jsdocBuilder.recordThisType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; case TYPE : if( ! jsdocBuilder.recordType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; case TYPEDEF : if( ! jsdocBuilder.recordTypedef(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; } } token = eatTokensUntilEOL(); continue retry; } } } break; case EOC : if(hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF : jsdocBuilder.build(null); parser.addParserWarning(\"msg.unexpected.eof\", stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL : if(state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); continue retry; default : if(token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) { token = next(); continue retry; } else { state = State.SEARCHING_NEWLINE; token = eatTokensUntilEOL(); continue retry; } } token = next(); } } ",
        "focal_tgt": "boolean parse() { int lineno; int charno; JSTypeExpression type; state = State.SEARCHING_ANNOTATION; skipEOLs(); JsDocToken token = next(); List < ExtendedTypeInfo > extendedTypes = Lists.newArrayList(); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo blockInfo = extractBlockComment(token); token = blockInfo.token; if( ! blockInfo.string.isEmpty()) { jsdocBuilder.recordBlockDescription(blockInfo.string); } } else { if(token != JsDocToken.ANNOTATION && token != JsDocToken.EOC) { jsdocBuilder.recordBlockDescription(\"\"); } } retry : for(; ; ) { switch(token) { case ANNOTATION : if(state == State.SEARCHING_ANNOTATION) { state = State.SEARCHING_NEWLINE; lineno = stream.getLineno(); charno = stream.getCharno(); String annotationName = stream.getString(); Annotation annotation = annotationNames.get(annotationName); if(annotation == null) { parser.addParserWarning(\"msg.bad.jsdoc.tag\", annotationName, stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.markAnnotation(annotationName, lineno, charno); switch(annotation) { case AUTHOR : if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo authorInfo = extractSingleLineBlock(); String author = authorInfo.string; if(author.length() == 0) { parser.addParserWarning(\"msg.jsdoc.authormissing\", stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.addAuthor(author); } token = authorInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case CONSISTENTIDGENERATOR : if( ! jsdocBuilder.recordConsistentIdGenerator()) { parser.addParserWarning(\"msg.jsdoc.consistidgen\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case CONSTANT : if( ! jsdocBuilder.recordConstancy()) { parser.addParserWarning(\"msg.jsdoc.const\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case STRUCT : if( ! jsdocBuilder.recordStruct()) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case DICT : if( ! jsdocBuilder.recordDict()) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case CONSTRUCTOR : if( ! jsdocBuilder.recordConstructor()) { if(jsdocBuilder.isInterfaceRecorded()) { parser.addTypeWarning(\"msg.jsdoc.interface.constructor\", stream.getLineno(), stream.getCharno()); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } } token = eatTokensUntilEOL(); continue retry; case DEPRECATED : if( ! jsdocBuilder.recordDeprecated()) { parser.addParserWarning(\"msg.jsdoc.deprecated\", stream.getLineno(), stream.getCharno()); } ExtractionInfo reasonInfo = extractMultilineTextualBlock(token); String reason = reasonInfo.string; if(reason.length() > 0) { jsdocBuilder.recordDeprecationReason(reason); } token = reasonInfo.token; continue retry; case INTERFACE : if( ! jsdocBuilder.recordInterface()) { if(jsdocBuilder.isConstructorRecorded()) { parser.addTypeWarning(\"msg.jsdoc.interface.constructor\", stream.getLineno(), stream.getCharno()); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", stream.getLineno(), stream.getCharno()); } } token = eatTokensUntilEOL(); continue retry; case DESC : if(jsdocBuilder.isDescriptionRecorded()) { parser.addParserWarning(\"msg.jsdoc.desc.extra\", stream.getLineno(), stream.getCharno()); token = eatTokensUntilEOL(); continue retry; } else { ExtractionInfo descriptionInfo = extractMultilineTextualBlock(token); String description = descriptionInfo.string; jsdocBuilder.recordDescription(description); token = descriptionInfo.token; continue retry; } case FILE_OVERVIEW : String fileOverview = \"\"; if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo fileOverviewInfo = extractMultilineTextualBlock(token, WhitespaceOption.TRIM); fileOverview = fileOverviewInfo.string; token = fileOverviewInfo.token; } else { token = eatTokensUntilEOL(token); } if( ! jsdocBuilder.recordFileOverview(fileOverview)) { parser.addParserWarning(\"msg.jsdoc.fileoverview.extra\", stream.getLineno(), stream.getCharno()); } continue retry; case LICENSE : case PRESERVE : ExtractionInfo preserveInfo = extractMultilineTextualBlock(token, WhitespaceOption.PRESERVE); String preserve = preserveInfo.string; if(preserve.length() > 0) { if(fileLevelJsDocBuilder != null) { fileLevelJsDocBuilder.append(preserve); } } token = preserveInfo.token; continue retry; case ENUM : token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token != JsDocToken.EOL && token != JsDocToken.EOC) { type = createJSTypeExpression(parseAndRecordTypeNode(token)); } if(type == null) { type = createJSTypeExpression(newStringNode(\"number\")); } if( ! jsdocBuilder.recordEnumParameterType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } token = eatTokensUntilEOL(token); continue retry; case EXPORT : if( ! jsdocBuilder.recordExport()) { parser.addParserWarning(\"msg.jsdoc.export\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXPOSE : if( ! jsdocBuilder.recordExpose()) { parser.addParserWarning(\"msg.jsdoc.expose\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXTERNS : if( ! jsdocBuilder.recordExterns()) { parser.addParserWarning(\"msg.jsdoc.externs\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case JAVA_DISPATCH : if( ! jsdocBuilder.recordJavaDispatch()) { parser.addParserWarning(\"msg.jsdoc.javadispatch\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case EXTENDS : case IMPLEMENTS : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); boolean matchingRc = false; if(token == JsDocToken.LC) { token = next(); matchingRc = true; } if(token == JsDocToken.STRING) { Node typeNode = parseAndRecordTypeNameNode(token, lineno, charno, matchingRc); lineno = stream.getLineno(); charno = stream.getCharno(); typeNode = wrapNode(Token.BANG, typeNode); type = createJSTypeExpression(typeNode); if(annotation == Annotation.EXTENDS) { extendedTypes.add(new ExtendedTypeInfo(type, stream.getLineno(), stream.getCharno())); } else { Preconditions.checkState(annotation == Annotation.IMPLEMENTS); if( ! jsdocBuilder.recordImplementedInterface(type)) { parser.addTypeWarning(\"msg.jsdoc.implements.duplicate\", lineno, charno); } } token = next(); if(matchingRc) { if(token != JsDocToken.RC) { parser.addTypeWarning(\"msg.jsdoc.missing.rc\", stream.getLineno(), stream.getCharno()); } } else if(token != JsDocToken.EOL && token != JsDocToken.EOF && token != JsDocToken.EOC) { parser.addTypeWarning(\"msg.end.annotation.expected\", stream.getLineno(), stream.getCharno()); } } else { parser.addTypeWarning(\"msg.no.type.name\", lineno, charno); } token = eatTokensUntilEOL(token); continue retry; case HIDDEN : if( ! jsdocBuilder.recordHiddenness()) { parser.addParserWarning(\"msg.jsdoc.hidden\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case LENDS : skipEOLs(); matchingRc = false; if(match(JsDocToken.LC)) { token = next(); matchingRc = true; } if(match(JsDocToken.STRING)) { token = next(); if( ! jsdocBuilder.recordLends(stream.getString())) { parser.addTypeWarning(\"msg.jsdoc.lends.incompatible\", stream.getLineno(), stream.getCharno()); } } else { parser.addTypeWarning(\"msg.jsdoc.lends.missing\", stream.getLineno(), stream.getCharno()); } if(matchingRc && ! match(JsDocToken.RC)) { parser.addTypeWarning(\"msg.jsdoc.missing.rc\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case MEANING : ExtractionInfo meaningInfo = extractMultilineTextualBlock(token); String meaning = meaningInfo.string; token = meaningInfo.token; if( ! jsdocBuilder.recordMeaning(meaning)) { parser.addParserWarning(\"msg.jsdoc.meaning.extra\", stream.getLineno(), stream.getCharno()); } continue retry; case NO_ALIAS : if( ! jsdocBuilder.recordNoAlias()) { parser.addParserWarning(\"msg.jsdoc.noalias\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_COMPILE : if( ! jsdocBuilder.recordNoCompile()) { parser.addParserWarning(\"msg.jsdoc.nocompile\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_TYPE_CHECK : if( ! jsdocBuilder.recordNoTypeCheck()) { parser.addParserWarning(\"msg.jsdoc.nocheck\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NOT_IMPLEMENTED : token = eatTokensUntilEOL(); continue retry; case INHERIT_DOC : case OVERRIDE : if( ! jsdocBuilder.recordOverride()) { parser.addTypeWarning(\"msg.jsdoc.override\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case THROWS : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token == JsDocToken.LC) { type = createJSTypeExpression(parseAndRecordTypeNode(token)); if(type == null) { token = eatTokensUntilEOL(); continue retry; } } token = current(); jsdocBuilder.recordThrowType(type); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo descriptionInfo = extractMultilineTextualBlock(token); String description = descriptionInfo.string; if(description.length() > 0) { jsdocBuilder.recordThrowDescription(type, description); } token = descriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case PARAM : skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); type = null; if(token == JsDocToken.LC) { type = createJSTypeExpression(parseAndRecordParamTypeNode(token)); if(type == null) { token = eatTokensUntilEOL(); continue retry; } skipEOLs(); token = next(); lineno = stream.getLineno(); charno = stream.getCharno(); } String name = null; boolean isBracketedParam = JsDocToken.LB == token; if(isBracketedParam) { token = next(); } if(JsDocToken.STRING != token) { parser.addTypeWarning(\"msg.missing.variable.name\", lineno, charno); } else { name = stream.getString(); if(isBracketedParam) { token = next(); if(JsDocToken.EQUALS == token) { token = next(); if(JsDocToken.STRING == token) { token = next(); } } if(JsDocToken.RB != token) { reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\"); } else if(type != null) { type = JSTypeExpression.makeOptionalArg(type); } } if(name.indexOf('.') > - 1) { name = null; } else if( ! jsdocBuilder.recordParameter(name, type)) { if(jsdocBuilder.hasParameter(name)) { parser.addTypeWarning(\"msg.dup.variable.name\", name, lineno, charno); } else { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", name, lineno, charno); } } } if(name == null) { token = eatTokensUntilEOL(token); continue retry; } jsdocBuilder.markName(name, sourceFile, lineno, charno); if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo paramDescriptionInfo = extractMultilineTextualBlock(token); String paramDescription = paramDescriptionInfo.string; if(paramDescription.length() > 0) { jsdocBuilder.recordParameterDescription(name, paramDescription); } token = paramDescriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case PRESERVE_TRY : if( ! jsdocBuilder.recordPreserveTry()) { parser.addParserWarning(\"msg.jsdoc.preservertry\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PRIVATE : if( ! jsdocBuilder.recordVisibility(Visibility.PRIVATE)) { parser.addParserWarning(\"msg.jsdoc.visibility.private\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PROTECTED : if( ! jsdocBuilder.recordVisibility(Visibility.PROTECTED)) { parser.addParserWarning(\"msg.jsdoc.visibility.protected\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case PUBLIC : if( ! jsdocBuilder.recordVisibility(Visibility.PUBLIC)) { parser.addParserWarning(\"msg.jsdoc.visibility.public\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_SHADOW : if( ! jsdocBuilder.recordNoShadow()) { parser.addParserWarning(\"msg.jsdoc.noshadow\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case NO_SIDE_EFFECTS : if( ! jsdocBuilder.recordNoSideEffects()) { parser.addParserWarning(\"msg.jsdoc.nosideeffects\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case MODIFIES : token = parseModifiesTag(next()); continue retry; case IMPLICIT_CAST : if( ! jsdocBuilder.recordImplicitCast()) { parser.addTypeWarning(\"msg.jsdoc.implicitcast\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case SEE : if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo referenceInfo = extractSingleLineBlock(); String reference = referenceInfo.string; if(reference.length() == 0) { parser.addParserWarning(\"msg.jsdoc.seemissing\", stream.getLineno(), stream.getCharno()); } else { jsdocBuilder.addReference(reference); } token = referenceInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case STABLEIDGENERATOR : if( ! jsdocBuilder.recordStableIdGenerator()) { parser.addParserWarning(\"msg.jsdoc.stableidgen\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case SUPPRESS : token = parseSuppressTag(next()); continue retry; case TEMPLATE : ExtractionInfo templateInfo = extractSingleLineBlock(); List < String > names = Lists.newArrayList(Splitter.on(',').trimResults().split(templateInfo.string)); if(names.size() == 0 || names.get(0).length() == 0) { parser.addTypeWarning(\"msg.jsdoc.templatemissing\", stream.getLineno(), stream.getCharno()); } else if( ! jsdocBuilder.recordTemplateTypeNames(names)) { parser.addTypeWarning(\"msg.jsdoc.template.at.most.once\", stream.getLineno(), stream.getCharno()); } token = templateInfo.token; continue retry; case IDGENERATOR : if( ! jsdocBuilder.recordIdGenerator()) { parser.addParserWarning(\"msg.jsdoc.idgen\", stream.getLineno(), stream.getCharno()); } token = eatTokensUntilEOL(); continue retry; case VERSION : ExtractionInfo versionInfo = extractSingleLineBlock(); String version = versionInfo.string; if(version.length() == 0) { parser.addParserWarning(\"msg.jsdoc.versionmissing\", stream.getLineno(), stream.getCharno()); } else { if( ! jsdocBuilder.recordVersion(version)) { parser.addParserWarning(\"msg.jsdoc.extraversion\", stream.getLineno(), stream.getCharno()); } } token = versionInfo.token; continue retry; case DEFINE : case RETURN : case THIS : case TYPE : case TYPEDEF : lineno = stream.getLineno(); charno = stream.getCharno(); Node typeNode = null; if( ! lookAheadForTypeAnnotation() && annotation == Annotation.RETURN) { typeNode = newNode(Token.QMARK); } else { skipEOLs(); token = next(); typeNode = parseAndRecordTypeNode(token); } if(annotation == Annotation.THIS) { typeNode = wrapNode(Token.BANG, typeNode); } type = createJSTypeExpression(typeNode); if(type == null) { } else { switch(annotation) { case DEFINE : if( ! jsdocBuilder.recordDefineType(type)) { parser.addParserWarning(\"msg.jsdoc.define\", lineno, charno); } break; case RETURN : if( ! jsdocBuilder.recordReturnType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); break; } if(jsdocBuilder.shouldParseDocumentation()) { ExtractionInfo returnDescriptionInfo = extractMultilineTextualBlock(token); String returnDescription = returnDescriptionInfo.string; if(returnDescription.length() > 0) { jsdocBuilder.recordReturnDescription(returnDescription); } token = returnDescriptionInfo.token; } else { token = eatTokensUntilEOL(token); } continue retry; case THIS : if( ! jsdocBuilder.recordThisType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; case TYPE : if( ! jsdocBuilder.recordType(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; case TYPEDEF : if( ! jsdocBuilder.recordTypedef(type)) { parser.addTypeWarning(\"msg.jsdoc.incompat.type\", lineno, charno); } break; } } token = eatTokensUntilEOL(); continue retry; } } } break; case EOC : if(hasParsedFileOverviewDocInfo()) { fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo(); } checkExtendedTypes(extendedTypes); return true; case EOF : jsdocBuilder.build(null); parser.addParserWarning(\"msg.unexpected.eof\", stream.getLineno(), stream.getCharno()); checkExtendedTypes(extendedTypes); return false; case EOL : if(state == State.SEARCHING_NEWLINE) { state = State.SEARCHING_ANNOTATION; } token = next(); continue retry; default : if(token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) { token = next(); continue retry; } else { state = State.SEARCHING_NEWLINE; token = eatTokensUntilEOL(); continue retry; } } token = next(); } } ",
        "test_src": "private JSDocInfo parse(String comment, String ... warnings) { return parse(comment, JsDocParsing.TYPES_ONLY, warnings); } ",
        "label": 0,
        "focal_db": [
            2029738,
            "google/closure-compiler",
            "/data/comment_repos/google@closure-compiler",
            "0e298f244a9bb271c7092d6e99067794098be878",
            "d2e2c1df48f65836d4ec5a75c95db5da41cb8bce",
            "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
            "3bf7d4759f41d3ad00f2b76f0fb6c55ebe32db88",
            "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
            "boolean parse() {\n    int lineno;\n    int charno;\n\n    // JSTypes are represented as Rhino AST nodes, and then resolved later.\n    JSTypeExpression type;\n\n    state = State.SEARCHING_ANNOTATION;\n    skipEOLs();\n\n    JsDocToken token = next();\n\n    List<ExtendedTypeInfo> extendedTypes = Lists.newArrayList();\n\n    // Always record that we have a comment.\n    if (jsdocBuilder.shouldParseDocumentation()) {\n      ExtractionInfo blockInfo = extractBlockComment(token);\n      token = blockInfo.token;\n      if (!blockInfo.string.isEmpty()) {\n        jsdocBuilder.recordBlockDescription(blockInfo.string);\n      }\n    } else {\n      if (token != JsDocToken.ANNOTATION &&\n          token != JsDocToken.EOC) {\n        // Mark that there was a description, but don't bother marking\n        // what it was.\n        jsdocBuilder.recordBlockDescription(\"\");\n      }\n    }\n\n    // Parse the actual JsDoc.\n    retry: for (;;) {\n      switch (token) {\n        case ANNOTATION:\n          if (state == State.SEARCHING_ANNOTATION) {\n            state = State.SEARCHING_NEWLINE;\n            lineno = stream.getLineno();\n            charno = stream.getCharno();\n\n            String annotationName = stream.getString();\n            Annotation annotation = annotationNames.get(annotationName);\n            if (annotation == null) {\n              parser.addParserWarning(\"msg.bad.jsdoc.tag\", annotationName,\n                  stream.getLineno(), stream.getCharno());\n            } else {\n              // Mark the beginning of the annotation.\n              jsdocBuilder.markAnnotation(annotationName, lineno, charno);\n\n              switch (annotation) {\n                case AUTHOR:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo authorInfo = extractSingleLineBlock();\n                    String author = authorInfo.string;\n\n                    if (author.length() == 0) {\n                      parser.addParserWarning(\"msg.jsdoc.authormissing\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      jsdocBuilder.addAuthor(author);\n                    }\n                    token = authorInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case CONSISTENTIDGENERATOR:\n                  if (!jsdocBuilder.recordConsistentIdGenerator()) {\n                    parser.addParserWarning(\"msg.jsdoc.consistidgen\",\n                      stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTANT:\n                  if (!jsdocBuilder.recordConstancy()) {\n                    parser.addParserWarning(\"msg.jsdoc.const\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case STRUCT:\n                  if (!jsdocBuilder.recordStruct()) {\n                    parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                                          stream.getLineno(),\n                                          stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DICT:\n                  if (!jsdocBuilder.recordDict()) {\n                    parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                                          stream.getLineno(),\n                                          stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTRUCTOR:\n                  if (!jsdocBuilder.recordConstructor()) {\n                    if (jsdocBuilder.isInterfaceRecorded()) {\n                      parser.addTypeWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DEPRECATED:\n                  if (!jsdocBuilder.recordDeprecated()) {\n                    parser.addParserWarning(\"msg.jsdoc.deprecated\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  // Find the reason/description, if any.\n                  ExtractionInfo reasonInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String reason = reasonInfo.string;\n\n                  if (reason.length() > 0) {\n                    jsdocBuilder.recordDeprecationReason(reason);\n                  }\n\n                  token = reasonInfo.token;\n                  continue retry;\n\n                case INTERFACE:\n                  if (!jsdocBuilder.recordInterface()) {\n                    if (jsdocBuilder.isConstructorRecorded()) {\n                      parser.addTypeWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DESC:\n                  if (jsdocBuilder.isDescriptionRecorded()) {\n                    parser.addParserWarning(\"msg.jsdoc.desc.extra\",\n                        stream.getLineno(), stream.getCharno());\n                    token = eatTokensUntilEOL();\n                    continue retry;\n                  } else {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    jsdocBuilder.recordDescription(description);\n                    token = descriptionInfo.token;\n                    continue retry;\n                  }\n\n                case FILE_OVERVIEW:\n                  String fileOverview = \"\";\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo fileOverviewInfo =\n                        extractMultilineTextualBlock(token,\n                            WhitespaceOption.TRIM);\n\n                    fileOverview = fileOverviewInfo.string;\n\n                    token = fileOverviewInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n\n                  if (!jsdocBuilder.recordFileOverview(fileOverview)) {\n                    parser.addParserWarning(\"msg.jsdoc.fileoverview.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  continue retry;\n\n                case LICENSE:\n                case PRESERVE:\n                  ExtractionInfo preserveInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.PRESERVE);\n\n                  String preserve = preserveInfo.string;\n\n                  if (preserve.length() > 0) {\n                    if (fileLevelJsDocBuilder != null) {\n                      fileLevelJsDocBuilder.append(preserve);\n                    }\n                  }\n\n                  token = preserveInfo.token;\n                  continue retry;\n\n                case ENUM:\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  type = null;\n                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n                  }\n\n                  if (type == null) {\n                    type = createJSTypeExpression(newStringNode(\"number\"));\n                  }\n                  if (!jsdocBuilder.recordEnumParameterType(type)) {\n                    parser.addTypeWarning(\n                        \"msg.jsdoc.incompat.type\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case EXPORT:\n                  if (!jsdocBuilder.recordExport()) {\n                    parser.addParserWarning(\"msg.jsdoc.export\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXPOSE:\n                  if (!jsdocBuilder.recordExpose()) {\n                    parser.addParserWarning(\"msg.jsdoc.expose\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTERNS:\n                  if (!jsdocBuilder.recordExterns()) {\n                    parser.addParserWarning(\"msg.jsdoc.externs\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case JAVA_DISPATCH:\n                  if (!jsdocBuilder.recordJavaDispatch()) {\n                    parser.addParserWarning(\"msg.jsdoc.javadispatch\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTENDS:\n                case IMPLEMENTS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  boolean matchingRc = false;\n\n                  if (token == JsDocToken.LC) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (token == JsDocToken.STRING) {\n                    Node typeNode = parseAndRecordTypeNameNode(\n                        token, lineno, charno, matchingRc);\n\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    type = createJSTypeExpression(typeNode);\n\n                    if (annotation == Annotation.EXTENDS) {\n                      // record the extended type, check later\n                      extendedTypes.add(new ExtendedTypeInfo(\n                          type, stream.getLineno(), stream.getCharno()));\n                    } else {\n                      Preconditions.checkState(\n                          annotation == Annotation.IMPLEMENTS);\n                      if (!jsdocBuilder.recordImplementedInterface(type)) {\n                        parser.addTypeWarning(\"msg.jsdoc.implements.duplicate\",\n                            lineno, charno);\n                      }\n                    }\n                    token = next();\n                    if (matchingRc) {\n                      if (token != JsDocToken.RC) {\n                        parser.addTypeWarning(\"msg.jsdoc.missing.rc\",\n                            stream.getLineno(), stream.getCharno());\n                      }\n                    } else if (token != JsDocToken.EOL &&\n                        token != JsDocToken.EOF && token != JsDocToken.EOC) {\n                      parser.addTypeWarning(\"msg.end.annotation.expected\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addTypeWarning(\"msg.no.type.name\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case HIDDEN:\n                  if (!jsdocBuilder.recordHiddenness()) {\n                    parser.addParserWarning(\"msg.jsdoc.hidden\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case LENDS:\n                  skipEOLs();\n\n                  matchingRc = false;\n                  if (match(JsDocToken.LC)) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (match(JsDocToken.STRING)) {\n                    token = next();\n                    if (!jsdocBuilder.recordLends(stream.getString())) {\n                      parser.addTypeWarning(\"msg.jsdoc.lends.incompatible\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addTypeWarning(\"msg.jsdoc.lends.missing\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  if (matchingRc && !match(JsDocToken.RC)) {\n                    parser.addTypeWarning(\"msg.jsdoc.missing.rc\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case MEANING:\n                  ExtractionInfo meaningInfo =\n                      extractMultilineTextualBlock(token);\n                  String meaning = meaningInfo.string;\n                  token = meaningInfo.token;\n                  if (!jsdocBuilder.recordMeaning(meaning)) {\n                    parser.addParserWarning(\"msg.jsdoc.meaning.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  continue retry;\n\n                case NO_ALIAS:\n                  if (!jsdocBuilder.recordNoAlias()) {\n                    parser.addParserWarning(\"msg.jsdoc.noalias\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_COMPILE:\n                  if (!jsdocBuilder.recordNoCompile()) {\n                    parser.addParserWarning(\"msg.jsdoc.nocompile\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_TYPE_CHECK:\n                  if (!jsdocBuilder.recordNoTypeCheck()) {\n                    parser.addParserWarning(\"msg.jsdoc.nocheck\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NOT_IMPLEMENTED:\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case INHERIT_DOC:\n                case OVERRIDE:\n                  if (!jsdocBuilder.recordOverride()) {\n                    parser.addTypeWarning(\"msg.jsdoc.override\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case THROWS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                  }\n\n                  // *Update* the token to that after the type annotation.\n                  token = current();\n\n                  // Save the throw type.\n                  jsdocBuilder.recordThrowType(type);\n\n                  // Find the throw's description (if applicable).\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    if (description.length() > 0) {\n                      jsdocBuilder.recordThrowDescription(type, description);\n                    }\n\n                    token = descriptionInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case PARAM:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordParamTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                    skipEOLs();\n                    token = next();\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n                  }\n\n                  String name = null;\n                  boolean isBracketedParam = JsDocToken.LB == token;\n                  if (isBracketedParam) {\n                    token = next();\n                  }\n\n                  if (JsDocToken.STRING != token) {\n                    parser.addTypeWarning(\"msg.missing.variable.name\",\n                        lineno, charno);\n                  } else {\n                    name = stream.getString();\n\n                    if (isBracketedParam) {\n                      token = next();\n\n                      // Throw out JsDocToolkit's \"default\" parameter\n                      // annotation.  It makes no sense under our type\n                      // system.\n                      if (JsDocToken.EQUALS == token) {\n                        token = next();\n                        if (JsDocToken.STRING == token) {\n                          token = next();\n                        }\n                      }\n\n                      if (JsDocToken.RB != token) {\n                        reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\");\n                      } else if (type != null) {\n                        // Make the type expression optional, if it isn't\n                        // already.\n                        type = JSTypeExpression.makeOptionalArg(type);\n                      }\n                    }\n\n                    // If the param name has a DOT in it, just throw it out\n                    // quietly. We do not handle the JsDocToolkit method\n                    // for handling properties of params.\n                    if (name.indexOf('.') > -1) {\n                      name = null;\n                    } else if (!jsdocBuilder.recordParameter(name, type)) {\n                      if (jsdocBuilder.hasParameter(name)) {\n                        parser.addTypeWarning(\"msg.dup.variable.name\", name,\n                            lineno, charno);\n                      } else {\n                        parser.addTypeWarning(\"msg.jsdoc.incompat.type\", name,\n                            lineno, charno);\n                      }\n                    }\n                  }\n\n                  if (name == null) {\n                    token = eatTokensUntilEOL(token);\n                    continue retry;\n                  }\n\n                  jsdocBuilder.markName(name, sourceFile, lineno, charno);\n\n                  // Find the parameter's description (if applicable).\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo paramDescriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String paramDescription = paramDescriptionInfo.string;\n\n                    if (paramDescription.length() > 0) {\n                      jsdocBuilder.recordParameterDescription(name,\n                          paramDescription);\n                    }\n\n                    token = paramDescriptionInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case PRESERVE_TRY:\n                  if (!jsdocBuilder.recordPreserveTry()) {\n                    parser.addParserWarning(\"msg.jsdoc.preservertry\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PRIVATE:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.private\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PROTECTED:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.protected\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PUBLIC:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.public\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SHADOW:\n                  if (!jsdocBuilder.recordNoShadow()) {\n                    parser.addParserWarning(\"msg.jsdoc.noshadow\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SIDE_EFFECTS:\n                  if (!jsdocBuilder.recordNoSideEffects()) {\n                    parser.addParserWarning(\"msg.jsdoc.nosideeffects\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case MODIFIES:\n                  token = parseModifiesTag(next());\n                  continue retry;\n\n                case IMPLICIT_CAST:\n                  if (!jsdocBuilder.recordImplicitCast()) {\n                    parser.addTypeWarning(\"msg.jsdoc.implicitcast\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case SEE:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo referenceInfo = extractSingleLineBlock();\n                    String reference = referenceInfo.string;\n\n                    if (reference.length() == 0) {\n                      parser.addParserWarning(\"msg.jsdoc.seemissing\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      jsdocBuilder.addReference(reference);\n                    }\n\n                    token = referenceInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case SUPPRESS:\n                  token = parseSuppressTag(next());\n                  continue retry;\n\n                case TEMPLATE:\n                  ExtractionInfo templateInfo = extractSingleLineBlock();\n                  List<String> names = Lists.newArrayList(\n                      Splitter.on(',')\n                          .trimResults()\n                          .split(templateInfo.string));\n\n                  if (names.size() == 0 || names.get(0).length() == 0) {\n                    parser.addTypeWarning(\"msg.jsdoc.templatemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else if (!jsdocBuilder.recordTemplateTypeNames(names)) {\n                    parser.addTypeWarning(\"msg.jsdoc.template.at.most.once\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  token = templateInfo.token;\n                  continue retry;\n\n                case IDGENERATOR:\n                  if (!jsdocBuilder.recordIdGenerator()) {\n                    parser.addParserWarning(\"msg.jsdoc.idgen\",\n                      stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case VERSION:\n                  ExtractionInfo versionInfo = extractSingleLineBlock();\n                  String version = versionInfo.string;\n\n                  if (version.length() == 0) {\n                    parser.addParserWarning(\"msg.jsdoc.versionmissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    if (!jsdocBuilder.recordVersion(version)) {\n                       parser.addParserWarning(\"msg.jsdoc.extraversion\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n\n                  token = versionInfo.token;\n                  continue retry;\n\n                case DEFINE:\n                case RETURN:\n                case THIS:\n                case TYPE:\n                case TYPEDEF:\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  Node typeNode = null;\n                  if (!lookAheadForTypeAnnotation() &&\n                      annotation == Annotation.RETURN) {\n                    // If RETURN doesn't have a type annotation, record\n                    // it as the unknown type.\n                    typeNode = newNode(Token.QMARK);\n                  } else {\n                    skipEOLs();\n                    token = next();\n                    typeNode = parseAndRecordTypeNode(token);\n                  }\n\n                  if (annotation == Annotation.THIS) {\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                  }\n                  type = createJSTypeExpression(typeNode);\n\n                  if (type == null) {\n                    // error reported during recursive descent\n                    // recovering parsing\n                  } else {\n                    switch (annotation) {\n                      case DEFINE:\n                        if (!jsdocBuilder.recordDefineType(type)) {\n                          parser.addParserWarning(\"msg.jsdoc.define\",\n                              lineno, charno);\n                        }\n                        break;\n\n                      case RETURN:\n                        if (!jsdocBuilder.recordReturnType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                          break;\n                        }\n\n                        // Find the return's description (if applicable).\n                        if (jsdocBuilder.shouldParseDocumentation()) {\n                          ExtractionInfo returnDescriptionInfo =\n                              extractMultilineTextualBlock(token);\n\n                          String returnDescription =\n                              returnDescriptionInfo.string;\n\n                          if (returnDescription.length() > 0) {\n                            jsdocBuilder.recordReturnDescription(\n                                returnDescription);\n                          }\n\n                          token = returnDescriptionInfo.token;\n                        } else {\n                          token = eatTokensUntilEOL(token);\n                        }\n                        continue retry;\n\n                      case THIS:\n                        if (!jsdocBuilder.recordThisType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPE:\n                        if (!jsdocBuilder.recordType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPEDEF:\n                        if (!jsdocBuilder.recordTypedef(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n                    }\n                  }\n\n                  token = eatTokensUntilEOL();\n                  continue retry;\n              }\n            }\n          }\n          break;\n\n        case EOC:\n          if (hasParsedFileOverviewDocInfo()) {\n            fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo();\n          }\n          checkExtendedTypes(extendedTypes);\n          return true;\n\n        case EOF:\n          // discard any accumulated information\n          jsdocBuilder.build(null);\n          parser.addParserWarning(\"msg.unexpected.eof\",\n              stream.getLineno(), stream.getCharno());\n          checkExtendedTypes(extendedTypes);\n          return false;\n\n        case EOL:\n          if (state == State.SEARCHING_NEWLINE) {\n            state = State.SEARCHING_ANNOTATION;\n          }\n          token = next();\n          continue retry;\n\n        default:\n          if (token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) {\n            token = next();\n            continue retry;\n          } else {\n            state = State.SEARCHING_NEWLINE;\n            token = eatTokensUntilEOL();\n            continue retry;\n          }\n      }\n\n      // next token\n      token = next();\n    }\n  }",
            "/**\n * Parses a {@link JSDocInfo} object. This parsing method reads all tokens\n * returned by the {@link JsDocTokenStream#getJsDocToken()} method until the\n * {@link JsDocToken#EOC} is returned.\n *\n * @return {@code true} if JSDoc information was correctly parsed,\n *     {@code false} otherwise\n */\n",
            "boolean parse() {\n    int lineno;\n    int charno;\n\n    // JSTypes are represented as Rhino AST nodes, and then resolved later.\n    JSTypeExpression type;\n\n    state = State.SEARCHING_ANNOTATION;\n    skipEOLs();\n\n    JsDocToken token = next();\n\n    List<ExtendedTypeInfo> extendedTypes = Lists.newArrayList();\n\n    // Always record that we have a comment.\n    if (jsdocBuilder.shouldParseDocumentation()) {\n      ExtractionInfo blockInfo = extractBlockComment(token);\n      token = blockInfo.token;\n      if (!blockInfo.string.isEmpty()) {\n        jsdocBuilder.recordBlockDescription(blockInfo.string);\n      }\n    } else {\n      if (token != JsDocToken.ANNOTATION &&\n          token != JsDocToken.EOC) {\n        // Mark that there was a description, but don't bother marking\n        // what it was.\n        jsdocBuilder.recordBlockDescription(\"\");\n      }\n    }\n\n    // Parse the actual JsDoc.\n    retry: for (;;) {\n      switch (token) {\n        case ANNOTATION:\n          if (state == State.SEARCHING_ANNOTATION) {\n            state = State.SEARCHING_NEWLINE;\n            lineno = stream.getLineno();\n            charno = stream.getCharno();\n\n            String annotationName = stream.getString();\n            Annotation annotation = annotationNames.get(annotationName);\n            if (annotation == null) {\n              parser.addParserWarning(\"msg.bad.jsdoc.tag\", annotationName,\n                  stream.getLineno(), stream.getCharno());\n            } else {\n              // Mark the beginning of the annotation.\n              jsdocBuilder.markAnnotation(annotationName, lineno, charno);\n\n              switch (annotation) {\n                case AUTHOR:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo authorInfo = extractSingleLineBlock();\n                    String author = authorInfo.string;\n\n                    if (author.length() == 0) {\n                      parser.addParserWarning(\"msg.jsdoc.authormissing\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      jsdocBuilder.addAuthor(author);\n                    }\n                    token = authorInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case CONSISTENTIDGENERATOR:\n                  if (!jsdocBuilder.recordConsistentIdGenerator()) {\n                    parser.addParserWarning(\"msg.jsdoc.consistidgen\",\n                      stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTANT:\n                  if (!jsdocBuilder.recordConstancy()) {\n                    parser.addParserWarning(\"msg.jsdoc.const\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case STRUCT:\n                  if (!jsdocBuilder.recordStruct()) {\n                    parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                                          stream.getLineno(),\n                                          stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DICT:\n                  if (!jsdocBuilder.recordDict()) {\n                    parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                                          stream.getLineno(),\n                                          stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTRUCTOR:\n                  if (!jsdocBuilder.recordConstructor()) {\n                    if (jsdocBuilder.isInterfaceRecorded()) {\n                      parser.addTypeWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DEPRECATED:\n                  if (!jsdocBuilder.recordDeprecated()) {\n                    parser.addParserWarning(\"msg.jsdoc.deprecated\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  // Find the reason/description, if any.\n                  ExtractionInfo reasonInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String reason = reasonInfo.string;\n\n                  if (reason.length() > 0) {\n                    jsdocBuilder.recordDeprecationReason(reason);\n                  }\n\n                  token = reasonInfo.token;\n                  continue retry;\n\n                case INTERFACE:\n                  if (!jsdocBuilder.recordInterface()) {\n                    if (jsdocBuilder.isConstructorRecorded()) {\n                      parser.addTypeWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addTypeWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DESC:\n                  if (jsdocBuilder.isDescriptionRecorded()) {\n                    parser.addParserWarning(\"msg.jsdoc.desc.extra\",\n                        stream.getLineno(), stream.getCharno());\n                    token = eatTokensUntilEOL();\n                    continue retry;\n                  } else {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    jsdocBuilder.recordDescription(description);\n                    token = descriptionInfo.token;\n                    continue retry;\n                  }\n\n                case FILE_OVERVIEW:\n                  String fileOverview = \"\";\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo fileOverviewInfo =\n                        extractMultilineTextualBlock(token,\n                            WhitespaceOption.TRIM);\n\n                    fileOverview = fileOverviewInfo.string;\n\n                    token = fileOverviewInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n\n                  if (!jsdocBuilder.recordFileOverview(fileOverview)) {\n                    parser.addParserWarning(\"msg.jsdoc.fileoverview.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  continue retry;\n\n                case LICENSE:\n                case PRESERVE:\n                  ExtractionInfo preserveInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.PRESERVE);\n\n                  String preserve = preserveInfo.string;\n\n                  if (preserve.length() > 0) {\n                    if (fileLevelJsDocBuilder != null) {\n                      fileLevelJsDocBuilder.append(preserve);\n                    }\n                  }\n\n                  token = preserveInfo.token;\n                  continue retry;\n\n                case ENUM:\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  type = null;\n                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n                  }\n\n                  if (type == null) {\n                    type = createJSTypeExpression(newStringNode(\"number\"));\n                  }\n                  if (!jsdocBuilder.recordEnumParameterType(type)) {\n                    parser.addTypeWarning(\n                        \"msg.jsdoc.incompat.type\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case EXPORT:\n                  if (!jsdocBuilder.recordExport()) {\n                    parser.addParserWarning(\"msg.jsdoc.export\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXPOSE:\n                  if (!jsdocBuilder.recordExpose()) {\n                    parser.addParserWarning(\"msg.jsdoc.expose\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTERNS:\n                  if (!jsdocBuilder.recordExterns()) {\n                    parser.addParserWarning(\"msg.jsdoc.externs\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case JAVA_DISPATCH:\n                  if (!jsdocBuilder.recordJavaDispatch()) {\n                    parser.addParserWarning(\"msg.jsdoc.javadispatch\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTENDS:\n                case IMPLEMENTS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  boolean matchingRc = false;\n\n                  if (token == JsDocToken.LC) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (token == JsDocToken.STRING) {\n                    Node typeNode = parseAndRecordTypeNameNode(\n                        token, lineno, charno, matchingRc);\n\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    type = createJSTypeExpression(typeNode);\n\n                    if (annotation == Annotation.EXTENDS) {\n                      // record the extended type, check later\n                      extendedTypes.add(new ExtendedTypeInfo(\n                          type, stream.getLineno(), stream.getCharno()));\n                    } else {\n                      Preconditions.checkState(\n                          annotation == Annotation.IMPLEMENTS);\n                      if (!jsdocBuilder.recordImplementedInterface(type)) {\n                        parser.addTypeWarning(\"msg.jsdoc.implements.duplicate\",\n                            lineno, charno);\n                      }\n                    }\n                    token = next();\n                    if (matchingRc) {\n                      if (token != JsDocToken.RC) {\n                        parser.addTypeWarning(\"msg.jsdoc.missing.rc\",\n                            stream.getLineno(), stream.getCharno());\n                      }\n                    } else if (token != JsDocToken.EOL &&\n                        token != JsDocToken.EOF && token != JsDocToken.EOC) {\n                      parser.addTypeWarning(\"msg.end.annotation.expected\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addTypeWarning(\"msg.no.type.name\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case HIDDEN:\n                  if (!jsdocBuilder.recordHiddenness()) {\n                    parser.addParserWarning(\"msg.jsdoc.hidden\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case LENDS:\n                  skipEOLs();\n\n                  matchingRc = false;\n                  if (match(JsDocToken.LC)) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (match(JsDocToken.STRING)) {\n                    token = next();\n                    if (!jsdocBuilder.recordLends(stream.getString())) {\n                      parser.addTypeWarning(\"msg.jsdoc.lends.incompatible\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addTypeWarning(\"msg.jsdoc.lends.missing\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  if (matchingRc && !match(JsDocToken.RC)) {\n                    parser.addTypeWarning(\"msg.jsdoc.missing.rc\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case MEANING:\n                  ExtractionInfo meaningInfo =\n                      extractMultilineTextualBlock(token);\n                  String meaning = meaningInfo.string;\n                  token = meaningInfo.token;\n                  if (!jsdocBuilder.recordMeaning(meaning)) {\n                    parser.addParserWarning(\"msg.jsdoc.meaning.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  continue retry;\n\n                case NO_ALIAS:\n                  if (!jsdocBuilder.recordNoAlias()) {\n                    parser.addParserWarning(\"msg.jsdoc.noalias\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_COMPILE:\n                  if (!jsdocBuilder.recordNoCompile()) {\n                    parser.addParserWarning(\"msg.jsdoc.nocompile\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_TYPE_CHECK:\n                  if (!jsdocBuilder.recordNoTypeCheck()) {\n                    parser.addParserWarning(\"msg.jsdoc.nocheck\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NOT_IMPLEMENTED:\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case INHERIT_DOC:\n                case OVERRIDE:\n                  if (!jsdocBuilder.recordOverride()) {\n                    parser.addTypeWarning(\"msg.jsdoc.override\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case THROWS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                  }\n\n                  // *Update* the token to that after the type annotation.\n                  token = current();\n\n                  // Save the throw type.\n                  jsdocBuilder.recordThrowType(type);\n\n                  // Find the throw's description (if applicable).\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    if (description.length() > 0) {\n                      jsdocBuilder.recordThrowDescription(type, description);\n                    }\n\n                    token = descriptionInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case PARAM:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordParamTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                    skipEOLs();\n                    token = next();\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n                  }\n\n                  String name = null;\n                  boolean isBracketedParam = JsDocToken.LB == token;\n                  if (isBracketedParam) {\n                    token = next();\n                  }\n\n                  if (JsDocToken.STRING != token) {\n                    parser.addTypeWarning(\"msg.missing.variable.name\",\n                        lineno, charno);\n                  } else {\n                    name = stream.getString();\n\n                    if (isBracketedParam) {\n                      token = next();\n\n                      // Throw out JsDocToolkit's \"default\" parameter\n                      // annotation.  It makes no sense under our type\n                      // system.\n                      if (JsDocToken.EQUALS == token) {\n                        token = next();\n                        if (JsDocToken.STRING == token) {\n                          token = next();\n                        }\n                      }\n\n                      if (JsDocToken.RB != token) {\n                        reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\");\n                      } else if (type != null) {\n                        // Make the type expression optional, if it isn't\n                        // already.\n                        type = JSTypeExpression.makeOptionalArg(type);\n                      }\n                    }\n\n                    // If the param name has a DOT in it, just throw it out\n                    // quietly. We do not handle the JsDocToolkit method\n                    // for handling properties of params.\n                    if (name.indexOf('.') > -1) {\n                      name = null;\n                    } else if (!jsdocBuilder.recordParameter(name, type)) {\n                      if (jsdocBuilder.hasParameter(name)) {\n                        parser.addTypeWarning(\"msg.dup.variable.name\", name,\n                            lineno, charno);\n                      } else {\n                        parser.addTypeWarning(\"msg.jsdoc.incompat.type\", name,\n                            lineno, charno);\n                      }\n                    }\n                  }\n\n                  if (name == null) {\n                    token = eatTokensUntilEOL(token);\n                    continue retry;\n                  }\n\n                  jsdocBuilder.markName(name, sourceFile, lineno, charno);\n\n                  // Find the parameter's description (if applicable).\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo paramDescriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String paramDescription = paramDescriptionInfo.string;\n\n                    if (paramDescription.length() > 0) {\n                      jsdocBuilder.recordParameterDescription(name,\n                          paramDescription);\n                    }\n\n                    token = paramDescriptionInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case PRESERVE_TRY:\n                  if (!jsdocBuilder.recordPreserveTry()) {\n                    parser.addParserWarning(\"msg.jsdoc.preservertry\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PRIVATE:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.private\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PROTECTED:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.protected\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PUBLIC:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {\n                    parser.addParserWarning(\"msg.jsdoc.visibility.public\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SHADOW:\n                  if (!jsdocBuilder.recordNoShadow()) {\n                    parser.addParserWarning(\"msg.jsdoc.noshadow\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SIDE_EFFECTS:\n                  if (!jsdocBuilder.recordNoSideEffects()) {\n                    parser.addParserWarning(\"msg.jsdoc.nosideeffects\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case MODIFIES:\n                  token = parseModifiesTag(next());\n                  continue retry;\n\n                case IMPLICIT_CAST:\n                  if (!jsdocBuilder.recordImplicitCast()) {\n                    parser.addTypeWarning(\"msg.jsdoc.implicitcast\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case SEE:\n                  if (jsdocBuilder.shouldParseDocumentation()) {\n                    ExtractionInfo referenceInfo = extractSingleLineBlock();\n                    String reference = referenceInfo.string;\n\n                    if (reference.length() == 0) {\n                      parser.addParserWarning(\"msg.jsdoc.seemissing\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      jsdocBuilder.addReference(reference);\n                    }\n\n                    token = referenceInfo.token;\n                  } else {\n                    token = eatTokensUntilEOL(token);\n                  }\n                  continue retry;\n\n                case STABLEIDGENERATOR:\n                  if (!jsdocBuilder.recordStableIdGenerator()) {\n                    parser.addParserWarning(\"msg.jsdoc.stableidgen\",\n                      stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case SUPPRESS:\n                  token = parseSuppressTag(next());\n                  continue retry;\n\n                case TEMPLATE:\n                  ExtractionInfo templateInfo = extractSingleLineBlock();\n                  List<String> names = Lists.newArrayList(\n                      Splitter.on(',')\n                          .trimResults()\n                          .split(templateInfo.string));\n\n                  if (names.size() == 0 || names.get(0).length() == 0) {\n                    parser.addTypeWarning(\"msg.jsdoc.templatemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else if (!jsdocBuilder.recordTemplateTypeNames(names)) {\n                    parser.addTypeWarning(\"msg.jsdoc.template.at.most.once\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  token = templateInfo.token;\n                  continue retry;\n\n                case IDGENERATOR:\n                  if (!jsdocBuilder.recordIdGenerator()) {\n                    parser.addParserWarning(\"msg.jsdoc.idgen\",\n                      stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case VERSION:\n                  ExtractionInfo versionInfo = extractSingleLineBlock();\n                  String version = versionInfo.string;\n\n                  if (version.length() == 0) {\n                    parser.addParserWarning(\"msg.jsdoc.versionmissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    if (!jsdocBuilder.recordVersion(version)) {\n                       parser.addParserWarning(\"msg.jsdoc.extraversion\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n\n                  token = versionInfo.token;\n                  continue retry;\n\n                case DEFINE:\n                case RETURN:\n                case THIS:\n                case TYPE:\n                case TYPEDEF:\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  Node typeNode = null;\n                  if (!lookAheadForTypeAnnotation() &&\n                      annotation == Annotation.RETURN) {\n                    // If RETURN doesn't have a type annotation, record\n                    // it as the unknown type.\n                    typeNode = newNode(Token.QMARK);\n                  } else {\n                    skipEOLs();\n                    token = next();\n                    typeNode = parseAndRecordTypeNode(token);\n                  }\n\n                  if (annotation == Annotation.THIS) {\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                  }\n                  type = createJSTypeExpression(typeNode);\n\n                  if (type == null) {\n                    // error reported during recursive descent\n                    // recovering parsing\n                  } else {\n                    switch (annotation) {\n                      case DEFINE:\n                        if (!jsdocBuilder.recordDefineType(type)) {\n                          parser.addParserWarning(\"msg.jsdoc.define\",\n                              lineno, charno);\n                        }\n                        break;\n\n                      case RETURN:\n                        if (!jsdocBuilder.recordReturnType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                          break;\n                        }\n\n                        // Find the return's description (if applicable).\n                        if (jsdocBuilder.shouldParseDocumentation()) {\n                          ExtractionInfo returnDescriptionInfo =\n                              extractMultilineTextualBlock(token);\n\n                          String returnDescription =\n                              returnDescriptionInfo.string;\n\n                          if (returnDescription.length() > 0) {\n                            jsdocBuilder.recordReturnDescription(\n                                returnDescription);\n                          }\n\n                          token = returnDescriptionInfo.token;\n                        } else {\n                          token = eatTokensUntilEOL(token);\n                        }\n                        continue retry;\n\n                      case THIS:\n                        if (!jsdocBuilder.recordThisType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPE:\n                        if (!jsdocBuilder.recordType(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPEDEF:\n                        if (!jsdocBuilder.recordTypedef(type)) {\n                          parser.addTypeWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n                    }\n                  }\n\n                  token = eatTokensUntilEOL();\n                  continue retry;\n              }\n            }\n          }\n          break;\n\n        case EOC:\n          if (hasParsedFileOverviewDocInfo()) {\n            fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo();\n          }\n          checkExtendedTypes(extendedTypes);\n          return true;\n\n        case EOF:\n          // discard any accumulated information\n          jsdocBuilder.build(null);\n          parser.addParserWarning(\"msg.unexpected.eof\",\n              stream.getLineno(), stream.getCharno());\n          checkExtendedTypes(extendedTypes);\n          return false;\n\n        case EOL:\n          if (state == State.SEARCHING_NEWLINE) {\n            state = State.SEARCHING_ANNOTATION;\n          }\n          token = next();\n          continue retry;\n\n        default:\n          if (token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) {\n            token = next();\n            continue retry;\n          } else {\n            state = State.SEARCHING_NEWLINE;\n            token = eatTokensUntilEOL();\n            continue retry;\n          }\n      }\n\n      // next token\n      token = next();\n    }\n  }",
            "/**\n * Parses a {@link JSDocInfo} object. This parsing method reads all tokens\n * returned by the {@link JsDocTokenStream#getJsDocToken()} method until the\n * {@link JsDocToken#EOC} is returned.\n *\n * @return {@code true} if JSDoc information was correctly parsed,\n *     {@code false} otherwise\n */\n"
        ],
        "test_db": [
            "5af11d33f8b3f5403c9987104601f544cddb96c1",
            "google/closure-compiler",
            "/data/comment_repos/google@closure-compiler",
            "parse",
            "/data/comment_repos/google@closure-compiler/test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java",
            "parse",
            "  private JSDocInfo parse(String comment, String... warnings) {\n    return parse(comment, JsDocParsing.TYPES_ONLY, warnings);\n  }",
            "boolean parse() {\n    int lineno;\n    int charno;\n\n    // JSTypes are represented as Rhino AST nodes, and then resolved later.\n    JSTypeExpression type;\n\n    state = State.SEARCHING_ANNOTATION;\n    JsDocToken token = next();\n\n    ExtractionInfo blockInfo = extractBlockComment(token);\n    token = blockInfo.token;\n\n    // If we have a block level comment, record it.\n    if (blockInfo.string.length() > 0) {\n      jsdocBuilder.recordBlockDescription(blockInfo.string);\n    }\n\n    // Parse the actual JsDoc.\n    retry: for (;;) {\n      switch (token) {\n        case ANNOTATION:\n          if (state == State.SEARCHING_ANNOTATION) {\n            state = State.SEARCHING_NEWLINE;\n            lineno = stream.getLineno();\n            charno = stream.getCharno();\n\n            String annotationName = stream.getString();\n            Annotation annotation = annotationNames.get(annotationName);\n            if (annotation == null) {\n              parser.addWarning(\"msg.bad.jsdoc.tag\", annotationName,\n                  stream.getLineno(), stream.getCharno());\n            } else {\n              // Mark the beginning of the annotation.\n              jsdocBuilder.markAnnotation(annotationName, lineno, charno);\n\n              switch (annotation) {\n                case AUTHOR:\n                  ExtractionInfo authorInfo = extractSingleLineBlock();\n                  String author = authorInfo.string;\n\n                  if (author.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.authormissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    jsdocBuilder.addAuthor(author);\n                  }\n\n                  token = authorInfo.token;\n                  continue retry;\n\n                case CONSTANT:\n                  if (!jsdocBuilder.recordConstancy()) {\n                    parser.addWarning(\"msg.jsdoc.const\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTRUCTOR:\n                  if (!jsdocBuilder.recordConstructor()) {\n                    if (jsdocBuilder.isInterfaceRecorded()) {\n                      parser.addWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DEPRECATED:\n                  if (!jsdocBuilder.recordDeprecated()) {\n                    parser.addWarning(\"msg.jsdoc.deprecated\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  // Find the reason/description, if any.\n                  ExtractionInfo reasonInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String reason = reasonInfo.string;\n\n                  if (reason.length() > 0) {\n                    jsdocBuilder.recordDeprecationReason(reason);\n                  }\n\n                  token = reasonInfo.token;\n                  continue retry;\n\n                case INTERFACE:\n                  if (!jsdocBuilder.recordInterface()) {\n                    if (jsdocBuilder.isConstructorRecorded()) {\n                      parser.addWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DESC:\n                  if (jsdocBuilder.isDescriptionRecorded()) {\n                    parser.addWarning(\"msg.jsdoc.desc.extra\",\n                        stream.getLineno(), stream.getCharno());\n                    token = eatTokensUntilEOL();\n                    continue retry;\n                  } else {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    jsdocBuilder.recordDescription(description);\n                    token = descriptionInfo.token;\n                    continue retry;\n                  }\n\n                case FILE_OVERVIEW:\n                  ExtractionInfo fileOverviewInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.TRIM);\n\n                  String fileOverview = fileOverviewInfo.string;\n\n                  if (!jsdocBuilder.recordFileOverview(fileOverview) ||\n                      fileOverviewJSDocInfo != null) {\n                    parser.addWarning(\"msg.jsdoc.fileoverview.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = fileOverviewInfo.token;\n                  continue retry;\n\n                case LICENSE:\n                case PRESERVE:\n                  ExtractionInfo preserveInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.PRESERVE);\n\n                  String preserve = preserveInfo.string;\n\n                  if (preserve.length() > 0) {\n                    if (fileLevelJsDocBuilder != null) {\n                      fileLevelJsDocBuilder.append(preserve);\n                    }\n                  }\n\n                  token = preserveInfo.token;\n                  continue retry;\n\n                case ENUM:\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  type = null;\n                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n                  }\n\n                  if (type == null) {\n                    type = createJSTypeExpression(newStringNode(\"number\"));\n                  }\n                  if (!jsdocBuilder.recordEnumParameterType(type)) {\n                    parser.addWarning(\"msg.jsdoc.incompat.type\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case EXPORT:\n                  if (!jsdocBuilder.recordExport()) {\n                    parser.addWarning(\"msg.jsdoc.export\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTENDS:\n                case IMPLEMENTS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  boolean matchingRc = false;\n\n                  if (token == JsDocToken.LC) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (token == JsDocToken.STRING) {\n                    Node typeNode = parseAndRecordTypeNameNode(\n                        token, lineno, charno, matchingRc);\n\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    if (typeNode != null && !matchingRc) {\n                      typeNode.putBooleanProp(Node.BRACELESS_TYPE, true);\n                    }\n                    type = createJSTypeExpression(typeNode);\n\n                    if (annotation == Annotation.EXTENDS) {\n                      if (!jsdocBuilder.recordBaseType(type)) {\n                        parser.addWarning(\n                            \"msg.jsdoc.incompat.type\", lineno, charno);\n                      }\n                    } else {\n                      Preconditions.checkState(\n                          annotation == Annotation.IMPLEMENTS);\n                      if (!jsdocBuilder.recordImplementedInterface(type)) {\n                        parser.addWarning(\"msg.jsdoc.implements.duplicate\",\n                            lineno, charno);\n                      }\n                    }\n                    token = next();\n                    if (matchingRc) {\n                      if (token != JsDocToken.RC) {\n                        parser.addWarning(\"msg.jsdoc.missing.rc\",\n                            stream.getLineno(), stream.getCharno());\n                      }\n                    } else if (token != JsDocToken.EOL &&\n                        token != JsDocToken.EOF && token != JsDocToken.EOC) {\n                      parser.addWarning(\"msg.end.annotation.expected\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addWarning(\"msg.no.type.name\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case HIDDEN:\n                  if (!jsdocBuilder.recordHiddenness()) {\n                    parser.addWarning(\"msg.jsdoc.hidden\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_ALIAS:\n                  if (!jsdocBuilder.recordNoAlias()) {\n                    parser.addWarning(\"msg.jsdoc.noalias\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_TYPE_CHECK:\n                  if (!jsdocBuilder.recordNoTypeCheck()) {\n                    parser.addWarning(\"msg.jsdoc.nocheck\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NOT_IMPLEMENTED:\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case INHERIT_DOC:\n                case OVERRIDE:\n                  if (!jsdocBuilder.recordOverride()) {\n                    parser.addWarning(\"msg.jsdoc.override\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case THROWS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                  }\n\n                  // *Update* the token to that after the type annotation.\n                  token = current();\n\n                  // Save the throw type.\n                  jsdocBuilder.recordThrowType(type);\n\n                  // Find the throw's description (if applicable).\n                  ExtractionInfo descriptionInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String description = descriptionInfo.string;\n\n                  if (description.length() > 0) {\n                    jsdocBuilder.recordThrowDescription(type, description);\n                  }\n\n                  token = descriptionInfo.token;\n                  continue retry;\n\n                case PARAM:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordParamTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                    skipEOLs();\n                    token = next();\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n                  }\n\n                  String name = null;\n                  boolean isBracketedParam = JsDocToken.LB == token;\n                  if (isBracketedParam) {\n                    token = next();\n                  }\n\n                  if (JsDocToken.STRING != token) {\n                    parser.addWarning(\"msg.missing.variable.name\",\n                        lineno, charno);\n                  } else {\n                    name = stream.getString();\n\n                    if (isBracketedParam) {\n                      token = next();\n                      if (JsDocToken.RB != token) {\n                        reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\");\n                      } else if (type != null) {\n                        // Make the type expression optional, if it isn't\n                        // already.\n                        type = JSTypeExpression.makeOptionalArg(type);\n                      }\n                    }\n\n                    if (!jsdocBuilder.recordParameter(name, type)) {\n                      if (jsdocBuilder.hasParameter(name)) {\n                        parser.addWarning(\"msg.dup.variable.name\", name,\n                            lineno, charno);\n                      } else {\n                        parser.addWarning(\"msg.jsdoc.incompat.type\", name,\n                            lineno, charno);\n                      }\n                    }\n                  }\n\n                  if (name == null) {\n                    token = eatTokensUntilEOL(token);\n                    continue retry;\n                  }\n\n                  jsdocBuilder.markName(name, lineno, charno);\n\n                  // Find the parameter's description (if applicable).\n                  ExtractionInfo paramDescriptionInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String paramDescription = paramDescriptionInfo.string;\n\n                  if (paramDescription.length() > 0) {\n                    jsdocBuilder.recordParameterDescription(name,\n                                                            paramDescription);\n                  }\n\n                  token = paramDescriptionInfo.token;\n                  continue retry;\n\n                case PRESERVE_TRY:\n                  if (!jsdocBuilder.recordPreserveTry()) {\n                    parser.addWarning(\"msg.jsdoc.preservertry\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PRIVATE:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.private\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PROTECTED:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.protected\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PUBLIC:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.public\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SHADOW:\n                  if (!jsdocBuilder.recordNoShadow()) {\n                    parser.addWarning(\"msg.jsdoc.noshadow\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SIDE_EFFECTS:\n                  if (!jsdocBuilder.recordNoSideEffects()) {\n                    parser.addWarning(\"msg.jsdoc.nosideeffects\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case IMPLICIT_CAST:\n                  if (!jsdocBuilder.recordImplicitCast()) {\n                    parser.addWarning(\"msg.jsdoc.implicitcast\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case SEE:\n                  ExtractionInfo referenceInfo = extractSingleLineBlock();\n                  String reference = referenceInfo.string;\n\n                  if (reference.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.seemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    jsdocBuilder.addReference(reference);\n                  }\n\n                  token = referenceInfo.token;\n                  continue retry;\n\n                case SUPPRESS:\n                  token = parseSuppressTag(next());\n                  continue retry;\n\n                case TEMPLATE:\n                  ExtractionInfo templateInfo = extractSingleLineBlock();\n                  String templateTypeName = templateInfo.string;\n\n                  if (templateTypeName.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.templatemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else if (!jsdocBuilder.recordTemplateTypeName(\n                      templateTypeName)) {\n                    parser.addWarning(\"msg.jsdoc.template.at.most.once\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  token = templateInfo.token;\n                  continue retry;\n\n                case VERSION:\n                  ExtractionInfo versionInfo = extractSingleLineBlock();\n                  String version = versionInfo.string;\n\n                  if (version.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.versionmissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    if (!jsdocBuilder.recordVersion(version)) {\n                       parser.addWarning(\"msg.jsdoc.extraversion\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n\n                  token = versionInfo.token;\n                  continue retry;\n\n                case DEFINE:\n                case RETURN:\n                case THIS:\n                case TYPE:\n                case TYPEDEF:\n                  skipEOLs();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  token = next();\n\n                  Node typeNode = parseAndRecordTypeNode(token, lineno, charno);\n\n                  if (annotation == Annotation.THIS) {\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    if (typeNode != null && token != JsDocToken.LC) {\n                      typeNode.putBooleanProp(Node.BRACELESS_TYPE, true);\n                    }\n                  }\n                  type = createJSTypeExpression(typeNode);\n\n                  if (type == null) {\n                    // error reported during recursive descent\n                    // recovering parsing\n                  } else {\n                    switch (annotation) {\n                      case DEFINE:\n                        if (!isValidDefineType(typeNode)) {\n                          parser.addWarning(\"msg.jsdoc.define.badtype\",\n                              lineno, charno);\n                        } else if (!jsdocBuilder.recordDefineType(type)) {\n                          parser.addWarning(\"msg.jsdoc.define\",\n                              lineno, charno);\n                        }\n                        break;\n\n                      case RETURN:\n                        if (!jsdocBuilder.recordReturnType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                          break;\n                        }\n\n                        // *Update* the token to that after the type annotation.\n                        token = current();\n\n                        // Find the return's description (if applicable).\n                        ExtractionInfo returnDescriptionInfo =\n                            extractMultilineTextualBlock(token);\n\n                        String returnDescription = returnDescriptionInfo.string;\n\n                        if (returnDescription.length() > 0) {\n                          jsdocBuilder.recordReturnDescription(\n                              returnDescription);\n                        }\n\n                        token = returnDescriptionInfo.token;\n                        continue retry;\n\n                      case THIS:\n                        if (!jsdocBuilder.recordThisType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPE:\n                        if (!jsdocBuilder.recordType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPEDEF:\n                        if (!jsdocBuilder.recordTypedef(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n                    }\n\n                    token = eatTokensUntilEOL();\n                  }\n                  continue retry;\n              }\n            }\n          }\n          break;\n\n        case EOC:\n          if (hasParsedFileOverviewDocInfo()) {\n            fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo();\n          }\n\n          return true;\n\n        case EOF:\n          // discard any accumulated information\n          jsdocBuilder.build(null);\n          parser.addWarning(\"msg.unexpected.eof\",\n              stream.getLineno(), stream.getCharno());\n          return false;\n\n        case EOL:\n          if (state == State.SEARCHING_NEWLINE) {\n            state = State.SEARCHING_ANNOTATION;\n          }\n          token = next();\n          continue retry;\n\n        default:\n          if (token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) {\n            token = next();\n            continue retry;\n          } else {\n            state = State.SEARCHING_NEWLINE;\n            token = eatTokensUntilEOL();\n            continue retry;\n          }\n      }\n\n      // next token\n      token = next();\n    }\n  }",
            "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
            "boolean parse() {\n    int lineno;\n    int charno;\n\n    // JSTypes are represented as Rhino AST nodes, and then resolved later.\n    JSTypeExpression type;\n\n    state = State.SEARCHING_ANNOTATION;\n    JsDocToken token = next();\n\n    ExtractionInfo blockInfo = extractBlockComment(token);\n    token = blockInfo.token;\n\n    // If we have a block level comment, record it.\n    if (blockInfo.string.length() > 0) {\n      jsdocBuilder.recordBlockDescription(blockInfo.string);\n    }\n\n    // Parse the actual JsDoc.\n    retry: for (;;) {\n      switch (token) {\n        case ANNOTATION:\n          if (state == State.SEARCHING_ANNOTATION) {\n            state = State.SEARCHING_NEWLINE;\n            lineno = stream.getLineno();\n            charno = stream.getCharno();\n\n            String annotationName = stream.getString();\n            Annotation annotation = annotationNames.get(annotationName);\n            if (annotation == null) {\n              parser.addWarning(\"msg.bad.jsdoc.tag\", annotationName,\n                  stream.getLineno(), stream.getCharno());\n            } else {\n              // Mark the beginning of the annotation.\n              jsdocBuilder.markAnnotation(annotationName, lineno, charno);\n\n              switch (annotation) {\n                case AUTHOR:\n                  ExtractionInfo authorInfo = extractSingleLineBlock();\n                  String author = authorInfo.string;\n\n                  if (author.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.authormissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    jsdocBuilder.addAuthor(author);\n                  }\n\n                  token = authorInfo.token;\n                  continue retry;\n\n                case CONSTANT:\n                  if (!jsdocBuilder.recordConstancy()) {\n                    parser.addWarning(\"msg.jsdoc.const\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case CONSTRUCTOR:\n                  if (!jsdocBuilder.recordConstructor()) {\n                    if (jsdocBuilder.isInterfaceRecorded()) {\n                      parser.addWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DEPRECATED:\n                  if (!jsdocBuilder.recordDeprecated()) {\n                    parser.addWarning(\"msg.jsdoc.deprecated\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  // Find the reason/description, if any.\n                  ExtractionInfo reasonInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String reason = reasonInfo.string;\n\n                  if (reason.length() > 0) {\n                    jsdocBuilder.recordDeprecationReason(reason);\n                  }\n\n                  token = reasonInfo.token;\n                  continue retry;\n\n                case INTERFACE:\n                  if (!jsdocBuilder.recordInterface()) {\n                    if (jsdocBuilder.isConstructorRecorded()) {\n                      parser.addWarning(\"msg.jsdoc.interface.constructor\",\n                          stream.getLineno(), stream.getCharno());\n                    } else {\n                      parser.addWarning(\"msg.jsdoc.incompat.type\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case DESC:\n                  if (jsdocBuilder.isDescriptionRecorded()) {\n                    parser.addWarning(\"msg.jsdoc.desc.extra\",\n                        stream.getLineno(), stream.getCharno());\n                    token = eatTokensUntilEOL();\n                    continue retry;\n                  } else {\n                    ExtractionInfo descriptionInfo =\n                        extractMultilineTextualBlock(token);\n\n                    String description = descriptionInfo.string;\n\n                    jsdocBuilder.recordDescription(description);\n                    token = descriptionInfo.token;\n                    continue retry;\n                  }\n\n                case FILE_OVERVIEW:\n                  ExtractionInfo fileOverviewInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.TRIM);\n\n                  String fileOverview = fileOverviewInfo.string;\n\n                  if (!jsdocBuilder.recordFileOverview(fileOverview) ||\n                      fileOverviewJSDocInfo != null) {\n                    parser.addWarning(\"msg.jsdoc.fileoverview.extra\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = fileOverviewInfo.token;\n                  continue retry;\n\n                case LICENSE:\n                case PRESERVE:\n                  ExtractionInfo preserveInfo =\n                      extractMultilineTextualBlock(token,\n                                                   WhitespaceOption.PRESERVE);\n\n                  String preserve = preserveInfo.string;\n\n                  if (preserve.length() > 0) {\n                    if (fileLevelJsDocBuilder != null) {\n                      fileLevelJsDocBuilder.append(preserve);\n                    }\n                  }\n\n                  token = preserveInfo.token;\n                  continue retry;\n\n                case ENUM:\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  type = null;\n                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n                  }\n\n                  if (type == null) {\n                    type = createJSTypeExpression(newStringNode(\"number\"));\n                  }\n                  if (!jsdocBuilder.recordEnumParameterType(type)) {\n                    parser.addWarning(\"msg.jsdoc.incompat.type\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case EXPORT:\n                  if (!jsdocBuilder.recordExport()) {\n                    parser.addWarning(\"msg.jsdoc.export\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case EXTENDS:\n                case IMPLEMENTS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  boolean matchingRc = false;\n\n                  if (token == JsDocToken.LC) {\n                    token = next();\n                    matchingRc = true;\n                  }\n\n                  if (token == JsDocToken.STRING) {\n                    Node typeNode = parseAndRecordTypeNameNode(\n                        token, lineno, charno, matchingRc);\n\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    if (typeNode != null && !matchingRc) {\n                      typeNode.putBooleanProp(Node.BRACELESS_TYPE, true);\n                    }\n                    type = createJSTypeExpression(typeNode);\n\n                    if (annotation == Annotation.EXTENDS) {\n                      if (!jsdocBuilder.recordBaseType(type)) {\n                        parser.addWarning(\n                            \"msg.jsdoc.incompat.type\", lineno, charno);\n                      }\n                    } else {\n                      Preconditions.checkState(\n                          annotation == Annotation.IMPLEMENTS);\n                      if (!jsdocBuilder.recordImplementedInterface(type)) {\n                        parser.addWarning(\"msg.jsdoc.implements.duplicate\",\n                            lineno, charno);\n                      }\n                    }\n                    token = next();\n                    if (matchingRc) {\n                      if (token != JsDocToken.RC) {\n                        parser.addWarning(\"msg.jsdoc.missing.rc\",\n                            stream.getLineno(), stream.getCharno());\n                      }\n                    } else if (token != JsDocToken.EOL &&\n                        token != JsDocToken.EOF && token != JsDocToken.EOC) {\n                      parser.addWarning(\"msg.end.annotation.expected\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  } else {\n                    parser.addWarning(\"msg.no.type.name\", lineno, charno);\n                  }\n                  token = eatTokensUntilEOL(token);\n                  continue retry;\n\n                case HIDDEN:\n                  if (!jsdocBuilder.recordHiddenness()) {\n                    parser.addWarning(\"msg.jsdoc.hidden\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_ALIAS:\n                  if (!jsdocBuilder.recordNoAlias()) {\n                    parser.addWarning(\"msg.jsdoc.noalias\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_TYPE_CHECK:\n                  if (!jsdocBuilder.recordNoTypeCheck()) {\n                    parser.addWarning(\"msg.jsdoc.nocheck\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NOT_IMPLEMENTED:\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case INHERIT_DOC:\n                case OVERRIDE:\n                  if (!jsdocBuilder.recordOverride()) {\n                    parser.addWarning(\"msg.jsdoc.override\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case THROWS:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                  }\n\n                  // *Update* the token to that after the type annotation.\n                  token = current();\n\n                  // Save the throw type.\n                  jsdocBuilder.recordThrowType(type);\n\n                  // Find the throw's description (if applicable).\n                  ExtractionInfo descriptionInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String description = descriptionInfo.string;\n\n                  if (description.length() > 0) {\n                    jsdocBuilder.recordThrowDescription(type, description);\n                  }\n\n                  token = descriptionInfo.token;\n                  continue retry;\n\n                case PARAM:\n                  skipEOLs();\n                  token = next();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n                  type = null;\n\n                  if (token == JsDocToken.LC) {\n                    type = createJSTypeExpression(\n                        parseAndRecordParamTypeNode(token));\n\n                    if (type == null) {\n                      // parsing error reported during recursive descent\n                      // recovering parsing\n                      token = eatTokensUntilEOL();\n                      continue retry;\n                    }\n                    skipEOLs();\n                    token = next();\n                    lineno = stream.getLineno();\n                    charno = stream.getCharno();\n                  }\n\n                  String name = null;\n                  boolean isBracketedParam = JsDocToken.LB == token;\n                  if (isBracketedParam) {\n                    token = next();\n                  }\n\n                  if (JsDocToken.STRING != token) {\n                    parser.addWarning(\"msg.missing.variable.name\",\n                        lineno, charno);\n                  } else {\n                    name = stream.getString();\n\n                    if (isBracketedParam) {\n                      token = next();\n\n                      // Throw out JsDocToolkit's \"default\" parameter annotation.\n                      // It makes no sense under our type system.\n                      if (JsDocToken.EQUALS == token) {\n                        token = next();\n                        if (JsDocToken.STRING == token) {\n                          token = next();\n                        }\n                      }\n\n                      if (JsDocToken.RB != token) {\n                        reportTypeSyntaxWarning(\"msg.jsdoc.missing.rb\");\n                      } else if (type != null) {\n                        // Make the type expression optional, if it isn't\n                        // already.\n                        type = JSTypeExpression.makeOptionalArg(type);\n                      }\n                    }\n\n                    // If the param name has a DOT in it, just throw it out\n                    // quietly. We do not handle the JsDocToolkit method\n                    // for handling properties of params.\n                    if (name.indexOf('.') > -1) {\n                      name = null;\n                    } else if (!jsdocBuilder.recordParameter(name, type)) {\n                      if (jsdocBuilder.hasParameter(name)) {\n                        parser.addWarning(\"msg.dup.variable.name\", name,\n                            lineno, charno);\n                      } else {\n                        parser.addWarning(\"msg.jsdoc.incompat.type\", name,\n                            lineno, charno);\n                      }\n                    }\n                  }\n\n                  if (name == null) {\n                    token = eatTokensUntilEOL(token);\n                    continue retry;\n                  }\n\n                  jsdocBuilder.markName(name, lineno, charno);\n\n                  // Find the parameter's description (if applicable).\n                  ExtractionInfo paramDescriptionInfo =\n                      extractMultilineTextualBlock(token);\n\n                  String paramDescription = paramDescriptionInfo.string;\n\n                  if (paramDescription.length() > 0) {\n                    jsdocBuilder.recordParameterDescription(name,\n                                                            paramDescription);\n                  }\n\n                  token = paramDescriptionInfo.token;\n                  continue retry;\n\n                case PRESERVE_TRY:\n                  if (!jsdocBuilder.recordPreserveTry()) {\n                    parser.addWarning(\"msg.jsdoc.preservertry\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PRIVATE:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PRIVATE)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.private\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PROTECTED:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PROTECTED)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.protected\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case PUBLIC:\n                  if (!jsdocBuilder.recordVisibility(Visibility.PUBLIC)) {\n                    parser.addWarning(\"msg.jsdoc.visibility.public\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SHADOW:\n                  if (!jsdocBuilder.recordNoShadow()) {\n                    parser.addWarning(\"msg.jsdoc.noshadow\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case NO_SIDE_EFFECTS:\n                  if (!jsdocBuilder.recordNoSideEffects()) {\n                    parser.addWarning(\"msg.jsdoc.nosideeffects\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case IMPLICIT_CAST:\n                  if (!jsdocBuilder.recordImplicitCast()) {\n                    parser.addWarning(\"msg.jsdoc.implicitcast\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n                  token = eatTokensUntilEOL();\n                  continue retry;\n\n                case SEE:\n                  ExtractionInfo referenceInfo = extractSingleLineBlock();\n                  String reference = referenceInfo.string;\n\n                  if (reference.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.seemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    jsdocBuilder.addReference(reference);\n                  }\n\n                  token = referenceInfo.token;\n                  continue retry;\n\n                case SUPPRESS:\n                  token = parseSuppressTag(next());\n                  continue retry;\n\n                case TEMPLATE:\n                  ExtractionInfo templateInfo = extractSingleLineBlock();\n                  String templateTypeName = templateInfo.string;\n\n                  if (templateTypeName.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.templatemissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else if (!jsdocBuilder.recordTemplateTypeName(\n                      templateTypeName)) {\n                    parser.addWarning(\"msg.jsdoc.template.at.most.once\",\n                        stream.getLineno(), stream.getCharno());\n                  }\n\n                  token = templateInfo.token;\n                  continue retry;\n\n                case VERSION:\n                  ExtractionInfo versionInfo = extractSingleLineBlock();\n                  String version = versionInfo.string;\n\n                  if (version.length() == 0) {\n                    parser.addWarning(\"msg.jsdoc.versionmissing\",\n                          stream.getLineno(), stream.getCharno());\n                  } else {\n                    if (!jsdocBuilder.recordVersion(version)) {\n                       parser.addWarning(\"msg.jsdoc.extraversion\",\n                          stream.getLineno(), stream.getCharno());\n                    }\n                  }\n\n                  token = versionInfo.token;\n                  continue retry;\n\n                case DEFINE:\n                case RETURN:\n                case THIS:\n                case TYPE:\n                case TYPEDEF:\n                  skipEOLs();\n                  lineno = stream.getLineno();\n                  charno = stream.getCharno();\n\n                  token = next();\n\n                  Node typeNode = parseAndRecordTypeNode(token, lineno, charno);\n\n                  if (annotation == Annotation.THIS) {\n                    typeNode = wrapNode(Token.BANG, typeNode);\n                    if (typeNode != null && token != JsDocToken.LC) {\n                      typeNode.putBooleanProp(Node.BRACELESS_TYPE, true);\n                    }\n                  }\n                  type = createJSTypeExpression(typeNode);\n\n                  if (type == null) {\n                    // error reported during recursive descent\n                    // recovering parsing\n                  } else {\n                    switch (annotation) {\n                      case DEFINE:\n                        if (!isValidDefineType(typeNode)) {\n                          parser.addWarning(\"msg.jsdoc.define.badtype\",\n                              lineno, charno);\n                        } else if (!jsdocBuilder.recordDefineType(type)) {\n                          parser.addWarning(\"msg.jsdoc.define\",\n                              lineno, charno);\n                        }\n                        break;\n\n                      case RETURN:\n                        if (!jsdocBuilder.recordReturnType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                          break;\n                        }\n\n                        // *Update* the token to that after the type annotation.\n                        token = current();\n\n                        // Find the return's description (if applicable).\n                        ExtractionInfo returnDescriptionInfo =\n                            extractMultilineTextualBlock(token);\n\n                        String returnDescription = returnDescriptionInfo.string;\n\n                        if (returnDescription.length() > 0) {\n                          jsdocBuilder.recordReturnDescription(\n                              returnDescription);\n                        }\n\n                        token = returnDescriptionInfo.token;\n                        continue retry;\n\n                      case THIS:\n                        if (!jsdocBuilder.recordThisType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPE:\n                        if (!jsdocBuilder.recordType(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n\n                      case TYPEDEF:\n                        if (!jsdocBuilder.recordTypedef(type)) {\n                          parser.addWarning(\n                              \"msg.jsdoc.incompat.type\", lineno, charno);\n                        }\n                        break;\n                    }\n\n                    token = eatTokensUntilEOL();\n                  }\n                  continue retry;\n              }\n            }\n          }\n          break;\n\n        case EOC:\n          if (hasParsedFileOverviewDocInfo()) {\n            fileOverviewJSDocInfo = retrieveAndResetParsedJSDocInfo();\n          }\n\n          return true;\n\n        case EOF:\n          // discard any accumulated information\n          jsdocBuilder.build(null);\n          parser.addWarning(\"msg.unexpected.eof\",\n              stream.getLineno(), stream.getCharno());\n          return false;\n\n        case EOL:\n          if (state == State.SEARCHING_NEWLINE) {\n            state = State.SEARCHING_ANNOTATION;\n          }\n          token = next();\n          continue retry;\n\n        default:\n          if (token == JsDocToken.STAR && state == State.SEARCHING_ANNOTATION) {\n            token = next();\n            continue retry;\n          } else {\n            state = State.SEARCHING_NEWLINE;\n            token = eatTokensUntilEOL();\n            continue retry;\n          }\n      }\n\n      // next token\n      token = next();\n    }\n  }",
            "src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java"
        ],
        "edit_seq": [
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Extended",
                "Extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "extended",
                "extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Lists",
                "Lists",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Comment",
                "Comment",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Empty",
                "Empty",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "block",
                "block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOC",
                "EOC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "switch",
                "switch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NEWLINE",
                "NEWLINE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Names",
                "Names",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "bad",
                "bad",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "tag",
                "tag",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "mark",
                "mark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "switch",
                "switch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "AUTHOR",
                "AUTHOR",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Single",
                "Single",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Line",
                "Line",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "authormissing",
                "authormissing",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Author",
                "Author",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "author",
                "author",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "CONSISTENTIDGENERATOR",
                "CONSISTENTIDGENERATOR",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Consistent",
                "Consistent",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Generator",
                "Generator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "consistidgen",
                "consistidgen",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "CONSTANT",
                "CONSTANT",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Constancy",
                "Constancy",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "const",
                "const",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "STRUCT",
                "STRUCT",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Struct",
                "Struct",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "DICT",
                "DICT",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dict",
                "Dict",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "CONSTRUCTOR",
                "CONSTRUCTOR",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Constructor",
                "Constructor",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Interface",
                "Interface",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Recorded",
                "Recorded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "interface",
                "interface",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "DEPRECATED",
                "DEPRECATED",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deprecated",
                "Deprecated",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "deprecated",
                "deprecated",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Deprecation",
                "Deprecation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reason",
                "Reason",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reason",
                "reason",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "INTERFACE",
                "INTERFACE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Interface",
                "Interface",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Constructor",
                "Constructor",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Recorded",
                "Recorded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "interface",
                "interface",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "constructor",
                "constructor",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "DESC",
                "DESC",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Recorded",
                "Recorded",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "desc",
                "desc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "extra",
                "extra",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "FILE",
                "FILE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "OVERVIEW",
                "OVERVIEW",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Whitespace",
                "Whitespace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Option",
                "Option",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "TRIM",
                "TRIM",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "fileoverview",
                "fileoverview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "extra",
                "extra",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "LICENSE",
                "LICENSE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PRESERVE",
                "PRESERVE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "Whitespace",
                "Whitespace",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Option",
                "Option",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PRESERVE",
                "PRESERVE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Level",
                "Level",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Level",
                "Level",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "append",
                "append",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "preserve",
                "preserve",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "ENUM",
                "ENUM",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOC",
                "EOC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Record",
                "Record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "number",
                "number",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Enum",
                "Enum",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameter",
                "Parameter",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EXPORT",
                "EXPORT",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Export",
                "Export",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "export",
                "export",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EXPOSE",
                "EXPOSE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expose",
                "Expose",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "expose",
                "expose",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EXTERNS",
                "EXTERNS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Externs",
                "Externs",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "externs",
                "externs",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "JAVA",
                "JAVA",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DISPATCH",
                "DISPATCH",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Java",
                "Java",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Dispatch",
                "Dispatch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "javadispatch",
                "javadispatch",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EXTENDS",
                "EXTENDS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "IMPLEMENTS",
                "IMPLEMENTS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LC",
                "LC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STRING",
                "STRING",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Record",
                "Record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "wrap",
                "wrap",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "BANG",
                "BANG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EXTENDS",
                "EXTENDS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "extended",
                "extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Extended",
                "Extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Preconditions",
                "Preconditions",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "IMPLEMENTS",
                "IMPLEMENTS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Implemented",
                "Implemented",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Interface",
                "Interface",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "implements",
                "implements",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "duplicate",
                "duplicate",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "RC",
                "RC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "rc",
                "rc",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOF",
                "EOF",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EOC",
                "EOC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "end",
                "end",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "expected",
                "expected",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "no",
                "no",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "HIDDEN",
                "HIDDEN",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Hiddenness",
                "Hiddenness",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "hidden",
                "hidden",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "LENDS",
                "LENDS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LC",
                "LC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STRING",
                "STRING",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lends",
                "Lends",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "lends",
                "lends",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompatible",
                "incompatible",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "lends",
                "lends",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "matching",
                "matching",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Rc",
                "Rc",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "match",
                "match",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "RC",
                "RC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "rc",
                "rc",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "MEANING",
                "MEANING",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Meaning",
                "Meaning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "meaning",
                "meaning",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "extra",
                "extra",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ALIAS",
                "ALIAS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Alias",
                "Alias",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "noalias",
                "noalias",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "COMPILE",
                "COMPILE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Compile",
                "Compile",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "nocompile",
                "nocompile",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "TYPE",
                "TYPE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "CHECK",
                "CHECK",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Check",
                "Check",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "nocheck",
                "nocheck",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NOT",
                "NOT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "IMPLEMENTED",
                "IMPLEMENTED",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "INHERIT",
                "INHERIT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DOC",
                "DOC",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "OVERRIDE",
                "OVERRIDE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "override",
                "override",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "THROWS",
                "THROWS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LC",
                "LC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Record",
                "Record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "current",
                "current",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Throw",
                "Throw",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Throw",
                "Throw",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "description",
                "description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PARAM",
                "PARAM",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LC",
                "LC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Record",
                "Record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "boolean",
                "boolean",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bracketed",
                "Bracketed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "LB",
                "LB",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bracketed",
                "Bracketed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STRING",
                "STRING",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "variable",
                "variable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Bracketed",
                "Bracketed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "EQUALS",
                "EQUALS",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STRING",
                "STRING",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "RB",
                "RB",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "report",
                "report",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Syntax",
                "Syntax",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "missing",
                "missing",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "rb",
                "rb",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "!=",
                "!=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "make",
                "make",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Optional",
                "Optional",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Arg",
                "Arg",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "index",
                "index",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "'.'",
                "'.'",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameter",
                "Parameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameter",
                "Parameter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "dup",
                "dup",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "variable",
                "variable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "mark",
                "mark",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "source",
                "source",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parameter",
                "Parameter",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "param",
                "param",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PRESERVE",
                "PRESERVE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "TRY",
                "TRY",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Preserve",
                "Preserve",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Try",
                "Try",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "preservertry",
                "preservertry",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PRIVATE",
                "PRIVATE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PRIVATE",
                "PRIVATE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "visibility",
                "visibility",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "private",
                "private",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PROTECTED",
                "PROTECTED",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PROTECTED",
                "PROTECTED",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "visibility",
                "visibility",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "protected",
                "protected",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "PUBLIC",
                "PUBLIC",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Visibility",
                "Visibility",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "PUBLIC",
                "PUBLIC",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "visibility",
                "visibility",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SHADOW",
                "SHADOW",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Shadow",
                "Shadow",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "noshadow",
                "noshadow",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "NO",
                "NO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "SIDE",
                "SIDE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EFFECTS",
                "EFFECTS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "No",
                "No",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Side",
                "Side",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Effects",
                "Effects",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "nosideeffects",
                "nosideeffects",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "MODIFIES",
                "MODIFIES",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Modifies",
                "Modifies",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tag",
                "Tag",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "IMPLICIT",
                "IMPLICIT",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "CAST",
                "CAST",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Implicit",
                "Implicit",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Cast",
                "Cast",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "implicitcast",
                "implicitcast",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "SEE",
                "SEE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Single",
                "Single",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Line",
                "Line",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "seemissing",
                "seemissing",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reference",
                "Reference",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "reference",
                "reference",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "",
                "STABLEIDGENERATOR",
                "insert"
            ],
            [
                "",
                ":",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "!",
                "insert"
            ],
            [
                "",
                "jsdoc",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Builder",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "record",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Stable",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Id",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Generator",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "parser",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "add",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Parser",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Warning",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "msg",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "jsdoc",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "stableidgen",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Lineno",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "stream",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Charno",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "token",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "eat",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Tokens",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Until",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "EOL",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "continue",
                "insert"
            ],
            [
                "",
                "retry",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "case",
                "insert"
            ],
            [
                "SUPPRESS",
                "SUPPRESS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Suppress",
                "Suppress",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tag",
                "Tag",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "TEMPLATE",
                "TEMPLATE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "template",
                "template",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Single",
                "Single",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Line",
                "Line",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "names",
                "names",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Lists",
                "Lists",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Splitter",
                "Splitter",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "on",
                "on",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "','",
                "','",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "trim",
                "trim",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Results",
                "Results",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "template",
                "template",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "names",
                "names",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "||",
                "||",
                "equal"
            ],
            [
                "names",
                "names",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "templatemissing",
                "templatemissing",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Template",
                "Template",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Names",
                "Names",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "names",
                "names",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "template",
                "template",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "at",
                "at",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "most",
                "most",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "once",
                "once",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "template",
                "template",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "IDGENERATOR",
                "IDGENERATOR",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Id",
                "Id",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Generator",
                "Generator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "idgen",
                "idgen",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "VERSION",
                "VERSION",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Single",
                "Single",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Line",
                "Line",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "versionmissing",
                "versionmissing",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Version",
                "Version",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "extraversion",
                "extraversion",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "version",
                "version",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "DEFINE",
                "DEFINE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "RETURN",
                "RETURN",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "THIS",
                "THIS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "TYPE",
                "TYPE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "TYPEDEF",
                "TYPEDEF",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "look",
                "look",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ahead",
                "Ahead",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "For",
                "For",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "RETURN",
                "RETURN",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "QMARK",
                "QMARK",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "skip",
                "skip",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EO",
                "EO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Ls",
                "Ls",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "parse",
                "parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Record",
                "Record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Annotation",
                "Annotation",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "THIS",
                "THIS",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "wrap",
                "wrap",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "BANG",
                "BANG",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Expression",
                "Expression",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Node",
                "Node",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "switch",
                "switch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "annotation",
                "annotation",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "DEFINE",
                "DEFINE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Define",
                "Define",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "define",
                "define",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "RETURN",
                "RETURN",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Return",
                "Return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "should",
                "should",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parse",
                "Parse",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Documentation",
                "Documentation",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Extraction",
                "Extraction",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "extract",
                "extract",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Multiline",
                "Multiline",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Textual",
                "Textual",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Block",
                "Block",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "string",
                "string",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "length",
                "length",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Return",
                "Return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Description",
                "Description",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "THIS",
                "THIS",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "This",
                "This",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "TYPE",
                "TYPE",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "TYPEDEF",
                "TYPEDEF",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "!",
                "!",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "record",
                "record",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Typedef",
                "Typedef",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "incompat",
                "incompat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "type",
                "type",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "lineno",
                "lineno",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "charno",
                "charno",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "break",
                "break",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EOC",
                "EOC",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parsed",
                "Parsed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Overview",
                "Overview",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "retrieve",
                "retrieve",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "And",
                "And",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Reset",
                "Reset",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parsed",
                "Parsed",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "JS",
                "JS",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Extended",
                "Extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "extended",
                "extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EOF",
                "EOF",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "jsdoc",
                "jsdoc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Builder",
                "Builder",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "parser",
                "parser",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Parser",
                "Parser",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warning",
                "Warning",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "msg",
                "msg",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "unexpected",
                "unexpected",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "eof",
                "eof",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Lineno",
                "Lineno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "stream",
                "stream",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Charno",
                "Charno",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "check",
                "check",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Extended",
                "Extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "extended",
                "extended",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Types",
                "Types",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "false",
                "false",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "case",
                "case",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NEWLINE",
                "NEWLINE",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "default",
                "default",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "Js",
                "Js",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Token",
                "Token",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "STAR",
                "STAR",
                "equal"
            ],
            [
                "&&",
                "&&",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "==",
                "==",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ANNOTATION",
                "ANNOTATION",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "state",
                "state",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "State",
                "State",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "SEARCHING",
                "SEARCHING",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "NEWLINE",
                "NEWLINE",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "eat",
                "eat",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Tokens",
                "Tokens",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Until",
                "Until",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "EOL",
                "EOL",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "continue",
                "continue",
                "equal"
            ],
            [
                "retry",
                "retry",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "token",
                "token",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Override public List < GeoCoordinate > geoPos(byte[]key, byte[] ... members) { List < GeoCoordinate > result = delegate.geoPos(key, members); if(isFutureConversion()) { addResultConverter(identityConverter); } return result; } ",
        "focal_tgt": "@Override public List < Point > geoPos(byte[]key, byte[] ... members) { List < Point > result = delegate.geoPos(key, members); if(isFutureConversion()) { addResultConverter(identityConverter); } return result; } ",
        "test_src": "@Test public void testGeoPos() { doReturn(Arrays.asList(new Object[] { geoCoordinates })).when(nativeConnection).exec(); super.testGeoPos(); } ",
        "test_tgt": "@Test public void testGeoPos() { doReturn(Arrays.asList(points)).when(nativeConnection).exec(); super.testGeoPos(); } ",
        "label": 1,
        "focal_db": [
            5314226,
            "spring-projects/spring-data-redis",
            "/data/local_comment_repos/spring-projects@spring-data-redis",
            "6e1cb941b8dda71e3704db94fc6ef22bd69289b9",
            "341423eb8e09a1c81ed0ed0b845a88487e530aea",
            "src/main/java/org/springframework/data/redis/connection/DefaultStringRedisConnection.java",
            "68197780c8a580ee7b2e25a71f6539ae116a5629",
            "src/main/java/org/springframework/data/redis/connection/DefaultStringRedisConnection.java",
            "@Override\n    public List<GeoCoordinate> geoPos(byte[] key, byte[]... members) {\n        List<GeoCoordinate> result = delegate.geoPos(key, members);\n        if (isFutureConversion()){\n            addResultConverter(identityConverter);\n        }\n        return result;\n    }",
            "",
            "@Override\n\tpublic List<Point> geoPos(byte[] key, byte[]... members) {\n\n\t\tList<Point> result = delegate.geoPos(key, members);\n\t\tif (isFutureConversion()) {\n\t\t\taddResultConverter(identityConverter);\n\t\t}\n\t\treturn result;\n\t}",
            "/*\n\t * (non-Javadoc)\n\t * @see org.springframework.data.redis.connection.RedisGeoCommands#geoPos(byte[], byte[][])\n\t */\n"
        ],
        "test_db": [
            5314417,
            "spring-projects/spring-data-redis",
            "/data/local_comment_repos/spring-projects@spring-data-redis",
            "6e1cb941b8dda71e3704db94fc6ef22bd69289b9",
            "0b1341109ae13214c5daaf6c94b0127c6c4b4db4",
            "src/test/java/org/springframework/data/redis/connection/DefaultStringRedisConnectionTxTests.java",
            "6a991b44d0cedd8f3dda69354294747f9442a065",
            "src/test/java/org/springframework/data/redis/connection/DefaultStringRedisConnectionTxTests.java",
            "@Test\n\tpublic void testGeoPos(){\n\t\tdoReturn(Arrays.asList(new Object[] { geoCoordinates })).when(nativeConnection).exec();\n\t\tsuper.testGeoPos();\n\t}",
            "",
            "@Test\n\tpublic void testGeoPos() {\n\n\t\tdoReturn(Arrays.asList(points)).when(nativeConnection).exec();\n\t\tsuper.testGeoPos();\n\t}",
            "/**\n * @see DATAREDIS-438\n */\n"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Override",
                "Override",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Geo",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Coordinate",
                "Point",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "geo",
                "geo",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pos",
                "Pos",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "byte",
                "byte",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "...",
                "...",
                "equal"
            ],
            [
                "members",
                "members",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "Geo",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Coordinate",
                "Point",
                "replace"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "delegate",
                "delegate",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "geo",
                "geo",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Pos",
                "Pos",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "members",
                "members",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Future",
                "Future",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Conversion",
                "Conversion",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Result",
                "Result",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Converter",
                "Converter",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "identity",
                "identity",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Converter",
                "Converter",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@SuppressWarnings(\"unchecked\")public static < T > List < T > ofAll(Iterable < ? extends T > elements) { Objects.requireNonNull(elements, \"elements is null\"); if(elements instanceof List) { return(List < T > )elements; } else if(elements instanceof java.util.List) { List < T > result = Nil.instance(); final java.util.List < T > list = (java.util.List < T > )elements; final ListIterator < T > iterator = list.listIterator(list.size()); while(iterator.hasPrevious()) { result = result.prepend(iterator.previous()); } return result; } else if(elements instanceof NavigableSet) { List < T > result = Nil.instance(); final java.util.Iterator < T > iterator = ((NavigableSet < T > )elements).descendingIterator(); while(iterator.hasNext()) { result = result.prepend(iterator.next()); } return result; } else { List < T > result = Nil.instance(); for(T element : elements) { result = result.prepend(element); } return result.reverse(); } } ",
        "focal_tgt": "@SuppressWarnings(\"unchecked\")public static < T > List < T > ofAll(Iterable < ? extends T > elements) { Objects.requireNonNull(elements, \"elements is null\"); if(elements instanceof List) { return(List < T > )elements; } else if(elements instanceof ListView && ((ListView < T, ? > )elements).getDelegate()instanceof List) { return(List < T > )((ListView < T, ? > )elements).getDelegate(); } else if(elements instanceof java.util.List) { List < T > result = Nil.instance(); final java.util.List < T > list = (java.util.List < T > )elements; final ListIterator < T > iterator = list.listIterator(list.size()); while(iterator.hasPrevious()) { result = result.prepend(iterator.previous()); } return result; } else if(elements instanceof NavigableSet) { List < T > result = Nil.instance(); final java.util.Iterator < T > iterator = ((NavigableSet < T > )elements).descendingIterator(); while(iterator.hasNext()) { result = result.prepend(iterator.next()); } return result; } else { List < T > result = Nil.instance(); for(T element : elements) { result = result.prepend(element); } return result.reverse(); } } ",
        "test_src": "@Override protected < T > List < T > ofAll(Iterable < ? extends T > elements) { return List.ofAll(elements); } ",
        "label": 0,
        "focal_db": [
            3807959,
            "vavr-io/vavr",
            "/data/comment_repos/vavr-io@vavr",
            "b5e79021571d387af3b4dcec77c213a3d640e98f",
            "bd43c227841285cea3cb91de8ba9ca4fe3780b61",
            "src/main/java/io/vavr/collection/List.java",
            "0f0a6cb49928c966c42b94ef29a1779312b35280",
            "src/main/java/io/vavr/collection/List.java",
            "@SuppressWarnings(\"unchecked\")\n    public static <T> List<T> ofAll(Iterable<? extends T> elements) {\n        Objects.requireNonNull(elements, \"elements is null\");\n        if (elements instanceof List) {\n            return (List<T>) elements;\n        } else if (elements instanceof java.util.List) {\n            List<T> result = Nil.instance();\n            final java.util.List<T> list = (java.util.List<T>) elements;\n            final ListIterator<T> iterator = list.listIterator(list.size());\n            while (iterator.hasPrevious()) {\n                result = result.prepend(iterator.previous());\n            }\n            return result;\n        } else if (elements instanceof NavigableSet) {\n            List<T> result = Nil.instance();\n            final java.util.Iterator<T> iterator = ((NavigableSet<T>) elements).descendingIterator();\n            while (iterator.hasNext()) {\n                result = result.prepend(iterator.next());\n            }\n            return result;\n        } else {\n            List<T> result = Nil.instance();\n            for (T element : elements) {\n                result = result.prepend(element);\n            }\n            return result.reverse();\n        }\n    }",
            "/**\n * Creates a List of the given elements.\n * <p>\n * The resulting list has the same iteration order as the given iterable of elements\n * if the iteration order of the elements is stable.\n *\n * @param <T>      Component type of the List.\n * @param elements An Iterable of elements.\n * @return A list containing the given elements in the same order.\n * @throws NullPointerException if {@code elements} is null\n */\n",
            "@SuppressWarnings(\"unchecked\")\n    public static <T> List<T> ofAll(Iterable<? extends T> elements) {\n        Objects.requireNonNull(elements, \"elements is null\");\n        if (elements instanceof List) {\n            return (List<T>) elements;\n        } else if (elements instanceof ListView\n                && ((ListView<T, ?>) elements).getDelegate() instanceof List) {\n            return (List<T>) ((ListView<T, ?>) elements).getDelegate();\n        } else if (elements instanceof java.util.List) {\n            List<T> result = Nil.instance();\n            final java.util.List<T> list = (java.util.List<T>) elements;\n            final ListIterator<T> iterator = list.listIterator(list.size());\n            while (iterator.hasPrevious()) {\n                result = result.prepend(iterator.previous());\n            }\n            return result;\n        } else if (elements instanceof NavigableSet) {\n            List<T> result = Nil.instance();\n            final java.util.Iterator<T> iterator = ((NavigableSet<T>) elements).descendingIterator();\n            while (iterator.hasNext()) {\n                result = result.prepend(iterator.next());\n            }\n            return result;\n        } else {\n            List<T> result = Nil.instance();\n            for (T element : elements) {\n                result = result.prepend(element);\n            }\n            return result.reverse();\n        }\n    }",
            "/**\n * Creates a List of the given elements.\n * <p>\n * The resulting list has the same iteration order as the given iterable of elements\n * if the iteration order of the elements is stable.\n *\n * @param <T>      Component type of the List.\n * @param elements An Iterable of elements.\n * @return A list containing the given elements in the same order.\n * @throws NullPointerException if {@code elements} is null\n */\n"
        ],
        "test_db": [
            "d394ede7df32a66c0812b9f390f89408d05dbf1e",
            "vavr-io/vavr",
            "/data/comment_repos/vavr-io@vavr",
            "ofAll",
            "/data/comment_repos/vavr-io@vavr/src/test/java/io/vavr/collection/ListTest.java",
            "ofAll",
            "    @Override\n    protected <T> List<T> ofAll(Iterable<? extends T> elements) {\n        return List.ofAll(elements);\n    }",
            "static <T> List<T> ofAll(Iterable<? extends T> elements) {\n        Objects.requireNonNull(elements, \"elements is null\");\n        if (elements instanceof List) {\n            @SuppressWarnings(\"unchecked\")\n            final List<T> list = (List<T>) elements;\n            return list;\n        } else if (elements instanceof ArrayList || elements instanceof Vector) {\n            @SuppressWarnings(\"unchecked\")\n            final java.util.List<T> indexedList = (java.util.List<T>) elements;\n            List<T> result = Nil.instance();\n            for (int i = indexedList.size() - 1; i >= 0; i--) {\n                final T element = indexedList.get(i);\n                result = result.prepend(element);\n            }\n            return result;\n        } else {\n            List<T> result = Nil.instance();\n            for (T element : elements) {\n                result = result.prepend(element);\n            }\n            return result.reverse();\n        }\n    }",
            "src/main/java/javaslang/collection/List.java",
            "static <T> List<T> ofAll(Iterable<? extends T> elements) {\n        Objects.requireNonNull(elements, \"elements is null\");\n        if (elements instanceof List) {\n            @SuppressWarnings(\"unchecked\")\n            final List<T> list = (List<T>) elements;\n            return list;\n        } else if (elements instanceof java.util.List<?>) {\n            List<T> result = Nil.instance();\n            final java.util.List<? extends T> list = (java.util.List<? extends T>) elements;\n            final ListIterator<? extends T> iter = list.listIterator(list.size());\n            while (iter.hasPrevious()) {\n                result = result.prepend(iter.previous());\n            }\n            return result;\n        } else if (elements instanceof NavigableSet<?>) {\n            List<T> result = Nil.instance();\n            final Iterator<? extends T> iter = ((NavigableSet<? extends T>) elements).descendingIterator();\n            while (iter.hasNext()) {\n                result = result.prepend(iter.next());\n            }\n            return result;\n        } else {\n            List<T> result = Nil.instance();\n            for (T element : elements) {\n                result = result.prepend(element);\n            }\n            return result.reverse();\n        }\n    }",
            "src/main/java/javaslang/collection/List.java"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Suppress",
                "Suppress",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Warnings",
                "Warnings",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "unchecked",
                "unchecked",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "of",
                "of",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "All",
                "All",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Iterable",
                "Iterable",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "?",
                "?",
                "equal"
            ],
            [
                "extends",
                "extends",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Objects",
                "Objects",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "require",
                "require",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Non",
                "Non",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Null",
                "Null",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                "is",
                "is",
                "equal"
            ],
            [
                "null",
                "null",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                "instanceof",
                "instanceof",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                "instanceof",
                "instanceof",
                "equal"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "View",
                "insert"
            ],
            [
                "",
                "&&",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "View",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "elements",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Delegate",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "instanceof",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "{",
                "insert"
            ],
            [
                "",
                "return",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "List",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "View",
                "insert"
            ],
            [
                "",
                "<",
                "insert"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "?",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "elements",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ".",
                "insert"
            ],
            [
                "",
                "get",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Delegate",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                ";",
                "insert"
            ],
            [
                "",
                "}",
                "insert"
            ],
            [
                "",
                "else",
                "insert"
            ],
            [
                "",
                "if",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "elements",
                "insert"
            ],
            [
                "",
                "instanceof",
                "insert"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "util",
                "util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Nil",
                "Nil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "instance",
                "instance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "util",
                "util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "util",
                "util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "list",
                "list",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "size",
                "size",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Previous",
                "Previous",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "prepend",
                "prepend",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "previous",
                "previous",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                "instanceof",
                "instanceof",
                "equal"
            ],
            [
                "Navigable",
                "Navigable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Nil",
                "Nil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "instance",
                "instance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "final",
                "final",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "util",
                "util",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Navigable",
                "Navigable",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Set",
                "Set",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "descending",
                "descending",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Iterator",
                "Iterator",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "has",
                "has",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Next",
                "Next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "prepend",
                "prepend",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "iterator",
                "iterator",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "next",
                "next",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "else",
                "else",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "List",
                "List",
                "equal"
            ],
            [
                "<",
                "<",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                ">",
                ">",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "Nil",
                "Nil",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "instance",
                "instance",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "for",
                "for",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "T",
                "T",
                "equal"
            ],
            [
                "element",
                "element",
                "equal"
            ],
            [
                ":",
                ":",
                "equal"
            ],
            [
                "elements",
                "elements",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "prepend",
                "prepend",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "element",
                "element",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "result",
                "result",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "reverse",
                "reverse",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static Object getProperty(Object bean, String expression) { return BeanPath.create(expression).get(bean); } ",
        "focal_tgt": "@SuppressWarnings(\"unchecked\")public static < T > T getProperty(Object bean, String expression) { return(T)BeanPath.create(expression).get(bean); } ",
        "test_src": "@Test public void getPropertyTest() { SubPerson person = new SubPerson(); person.setAge(14); person.setOpenid(\"11213232\"); person.setName(\"\u6d4b\u8bd5A11\"); person.setSubName(\"sub\u540d\u5b57\"); Object name = BeanUtil.getProperty(person, \"name\"); Assert.assertEquals(\"\u6d4b\u8bd5A11\", name); Object subName = BeanUtil.getProperty(person, \"subName\"); Assert.assertEquals(\"sub\u540d\u5b57\", subName); } ",
        "label": 0,
        "focal_db": [
            2652084,
            "looly/hutool",
            "/data/comment_repos/looly@hutool",
            "e168de86220a769a5d765e8a4e8fa74059a815da",
            "a2fd9fb368d40b03feb5dc553d8902a1517c3f1e",
            "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
            "65e36053c1b04767dfb6b5646ad7ceb48fb48c4e",
            "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
            "public static Object getProperty(Object bean, String expression) {\n\t\treturn BeanPath.create(expression).get(bean);\n\t}",
            "/**\n * \u89e3\u6790Bean\u4e2d\u7684\u5c5e\u6027\u503c\n *\n * @param bean       Bean\u5bf9\u8c61\uff0c\u652f\u6301Map\u3001List\u3001Collection\u3001Array\n * @param expression \u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982\uff1aperson.friend[5].name\n * @return Bean\u5c5e\u6027\u503c\n * @see BeanPath#get(Object)\n * @since 3.0.7\n */\n",
            "@SuppressWarnings(\"unchecked\")\n\tpublic static <T> T getProperty(Object bean, String expression) {\n\t\treturn (T) BeanPath.create(expression).get(bean);\n\t}",
            "/**\n * \u89e3\u6790Bean\u4e2d\u7684\u5c5e\u6027\u503c\n *\n * @param <T> \u5c5e\u6027\u503c\u7c7b\u578b\n * @param bean       Bean\u5bf9\u8c61\uff0c\u652f\u6301Map\u3001List\u3001Collection\u3001Array\n * @param expression \u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982\uff1aperson.friend[5].name\n * @return Bean\u5c5e\u6027\u503c\n * @see BeanPath#get(Object)\n * @since 3.0.7\n */\n"
        ],
        "test_db": [
            "e168de86220a769a5d765e8a4e8fa74059a815da",
            "looly/hutool",
            "/data/comment_repos/looly@hutool",
            "getProperty",
            "/data/comment_repos/looly@hutool/hutool-core/src/test/java/cn/hutool/core/bean/BeanUtilTest.java",
            "getPropertyTest",
            "\t@Test\n\tpublic void getPropertyTest() {\n\t\tSubPerson person = new SubPerson();\n\t\tperson.setAge(14);\n\t\tperson.setOpenid(\"11213232\");\n\t\tperson.setName(\"\u6d4b\u8bd5A11\");\n\t\tperson.setSubName(\"sub\u540d\u5b57\");\n\t\t\n\t\tObject name = BeanUtil.getProperty(person, \"name\");\n\t\tAssert.assertEquals(\"\u6d4b\u8bd5A11\", name);\n\t\tObject subName = BeanUtil.getProperty(person, \"subName\");\n\t\tAssert.assertEquals(\"sub\u540d\u5b57\", subName);\n\t}",
            "public static Object getProperty(Object bean, String expression) {\n\t\treturn BeanPath.create(expression).get(bean);\n\t}",
            "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java",
            "@SuppressWarnings(\"unchecked\")\n\tpublic static <T> T getProperty(Object bean, String expression) {\n\t\treturn (T) BeanPath.create(expression).get(bean);\n\t}",
            "hutool-core/src/main/java/cn/hutool/core/bean/BeanUtil.java"
        ],
        "edit_seq": [
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Suppress",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Warnings",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "unchecked",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "Object",
                "<",
                "replace"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "",
                ">",
                "insert"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Property",
                "Property",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Object",
                "Object",
                "equal"
            ],
            [
                "bean",
                "bean",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "expression",
                "expression",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "T",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "Bean",
                "Bean",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "expression",
                "expression",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "bean",
                "bean",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void addPackageInfo(File path, String classInfo, String pack)throws IOException { if(pack.contains(ORG)) { String[]strArray = pack.split(ORG); pack = ORG + strArray[1]; } try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, false)); bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN); bufferedWriter.close(); fileWriter.close(); } catch(IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } } ",
        "focal_tgt": "public static void addPackageInfo(File path, String classInfo, String pack, boolean isChildNode)throws IOException { if(pack.contains(ORG)) { String[]strArray = pack.split(ORG); pack = ORG + strArray[1]; } try { File packageInfo = new File(path + SLASH + \"package-info.java\"); packageInfo.createNewFile(); FileWriter fileWriter = new FileWriter(packageInfo); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); bufferedWriter.write(CopyrightHeader.getCopyrightHeader()); bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, isChildNode)); bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN); bufferedWriter.close(); fileWriter.close(); } catch(IOException e) { throw new IOException(\"Exception occured while creating package info file.\"); } } ",
        "test_src": "@Test public void addPackageInfoTest()throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, \"check1\", CREATE_PATH); File filePath = new File(dirPath + File.separator + \"package-info.java\"); assertThat(filePath.isFile(), is(true)); } ",
        "test_tgt": "@Test public void addPackageInfoTest()throws IOException { File dirPath = new File(CREATE_PATH); dirPath.mkdirs(); addPackageInfo(dirPath, CHECK1, CREATE_PATH, false); File filePath = new File(dirPath + File.separator + PKG_INFO); assertThat(filePath.isFile(), is(true)); } ",
        "label": 1,
        "focal_db": [
            3051064,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "c0e04846a216b06e061c8b23b0dbf569de381b35",
            "192df4e1e24594365e70199bdf683817ee999318",
            "utils/yangutils/src/main/java/org/onosproject/yangutils/utils/io/impl/YangIoUtils.java",
            "a076fbe27359780e5e57a86f96115085ae17da7e",
            "utils/yangutils/src/main/java/org/onosproject/yangutils/utils/io/impl/YangIoUtils.java",
            "public static void addPackageInfo(File path, String classInfo, String pack) throws IOException {\n\n        if (pack.contains(ORG)) {\n            String[] strArray = pack.split(ORG);\n            pack = ORG + strArray[1];\n        }\n        try {\n\n            File packageInfo = new File(path + SLASH + \"package-info.java\");\n            packageInfo.createNewFile();\n\n            FileWriter fileWriter = new FileWriter(packageInfo);\n            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);\n\n            bufferedWriter.write(CopyrightHeader.getCopyrightHeader());\n            bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, false));\n            bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN);\n\n            bufferedWriter.close();\n            fileWriter.close();\n        } catch (IOException e) {\n            throw new IOException(\"Exception occured while creating package info file.\");\n        }\n    }",
            "/**\n * Adds package info file for the created directory.\n *\n * @param path directory path\n * @param classInfo class info for the package\n * @param pack package of the directory\n * @throws IOException when fails to create package info file\n */\n",
            "public static void addPackageInfo(File path, String classInfo, String pack, boolean isChildNode)\n            throws IOException {\n\n        if (pack.contains(ORG)) {\n            String[] strArray = pack.split(ORG);\n            pack = ORG + strArray[1];\n        }\n        try {\n\n            File packageInfo = new File(path + SLASH + \"package-info.java\");\n            packageInfo.createNewFile();\n\n            FileWriter fileWriter = new FileWriter(packageInfo);\n            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);\n\n            bufferedWriter.write(CopyrightHeader.getCopyrightHeader());\n            bufferedWriter.write(getJavaDoc(PACKAGE_INFO, classInfo, isChildNode));\n            bufferedWriter.write(PACKAGE + SPACE + pack + SEMI_COLAN);\n\n            bufferedWriter.close();\n            fileWriter.close();\n        } catch (IOException e) {\n            throw new IOException(\"Exception occured while creating package info file.\");\n        }\n    }",
            "/**\n * Adds package info file for the created directory.\n *\n * @param path directory path\n * @param classInfo class info for the package\n * @param pack package of the directory\n * @param isChildNode is it a child node\n * @throws IOException when fails to create package info file\n */\n"
        ],
        "test_db": [
            3051067,
            "opennetworkinglab/onos",
            "/data/comment_repos/opennetworkinglab@onos",
            "c0e04846a216b06e061c8b23b0dbf569de381b35",
            "b9395167e25d78a107a386eec64d9f7e6a924b11",
            "utils/yangutils/src/test/java/org/onosproject/yangutils/utils/io/impl/YangIoUtilsTest.java",
            "204bd7b100dc45d294b0969faf7cc722033159f9",
            "utils/yangutils/src/test/java/org/onosproject/yangutils/utils/io/impl/YangIoUtilsTest.java",
            "@Test\n    public void addPackageInfoTest() throws IOException {\n\n        File dirPath = new File(CREATE_PATH);\n        dirPath.mkdirs();\n        addPackageInfo(dirPath, \"check1\", CREATE_PATH);\n        File filePath = new File(dirPath + File.separator + \"package-info.java\");\n        assertThat(filePath.isFile(), is(true));\n    }",
            "/**\n * This test case checks whether the package-info file is created.\n *\n * @throws IOException when fails to do IO operations for test case\n */\n",
            "@Test\n    public void addPackageInfoTest() throws IOException {\n\n        File dirPath = new File(CREATE_PATH);\n        dirPath.mkdirs();\n        addPackageInfo(dirPath, CHECK1, CREATE_PATH, false);\n        File filePath = new File(dirPath + File.separator + PKG_INFO);\n        assertThat(filePath.isFile(), is(true));\n    }",
            "/**\n * This test case checks whether the package-info file is created.\n *\n * @throws IOException when fails to do IO operations for test case\n */\n"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "add",
                "add",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Package",
                "Package",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "",
                ",",
                "insert"
            ],
            [
                "",
                "boolean",
                "insert"
            ],
            [
                "",
                "is",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Child",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Node",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "throws",
                "throws",
                "equal"
            ],
            [
                "IO",
                "IO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "if",
                "if",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "contains",
                "contains",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "split",
                "split",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "ORG",
                "ORG",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "str",
                "str",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Array",
                "Array",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "try",
                "try",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "path",
                "path",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SLASH",
                "SLASH",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "-",
                "-",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "java",
                "java",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "create",
                "create",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "New",
                "New",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "File",
                "File",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Buffered",
                "Buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "buffered",
                "buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Buffered",
                "Buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "buffered",
                "buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Copyright",
                "Copyright",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Header",
                "Header",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Copyright",
                "Copyright",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Header",
                "Header",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "buffered",
                "buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Java",
                "Java",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Doc",
                "Doc",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PACKAGE",
                "PACKAGE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "INFO",
                "INFO",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "class",
                "class",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Info",
                "Info",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "false",
                "is",
                "replace"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Child",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Node",
                "insert"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "buffered",
                "buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "write",
                "write",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "PACKAGE",
                "PACKAGE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SPACE",
                "SPACE",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "pack",
                "pack",
                "equal"
            ],
            [
                "+",
                "+",
                "equal"
            ],
            [
                "SEMI",
                "SEMI",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "COLAN",
                "COLAN",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "buffered",
                "buffered",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Writer",
                "Writer",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "close",
                "close",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "catch",
                "catch",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "IO",
                "IO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "e",
                "e",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "throw",
                "throw",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "IO",
                "IO",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "occured",
                "occured",
                "equal"
            ],
            [
                "while",
                "while",
                "equal"
            ],
            [
                "creating",
                "creating",
                "equal"
            ],
            [
                "package",
                "package",
                "equal"
            ],
            [
                "info",
                "info",
                "equal"
            ],
            [
                "file",
                "file",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@DELETE@Path(\"{name}\")public Response deleteSecretSeries(@Auth AutomationClient automationClient, @PathParam(\"name\")String name) { secretSeriesDAO.getSecretSeriesByName(name).orElseThrow(NotFoundException :: new); secretDAO.deleteSecretsByName(name); return Response.noContent().build(); } ",
        "focal_tgt": "@DELETE@Timed@Metered(name = \"QPS\")@ExceptionMetered(name = \"ExceptionQPS\")@Path(\"{name}\")public Response deleteSecretSeries(@Auth AutomationClient automationClient, @PathParam(\"name\")String name) { secretSeriesDAO.getSecretSeriesByName(name).orElseThrow(NotFoundException :: new); secretDAO.deleteSecretsByName(name); return Response.noContent().build(); } ",
        "test_src": "@Test public void deleteSecretSeries_notFound()throws Exception { assertThat(deleteSeries(\"non-existent\").code()).isEqualTo(404); } ",
        "label": 0,
        "focal_db": [
            3565226,
            "square/keywhiz",
            "/data/comment_repos/square@keywhiz",
            "0e618b8651ffd022e49491418e3057c180b9eb17",
            "bada0f1858eb4b529b36f07ed69281e977e9349b",
            "server/src/main/java/keywhiz/service/resources/automation/v2/SecretResource.java",
            "ad70f8b6fe1fc3efe2461095344411d4a2b6dcdf",
            "server/src/main/java/keywhiz/service/resources/automation/v2/SecretResource.java",
            "@DELETE\n  @Path(\"{name}\")\n  public Response deleteSecretSeries(@Auth AutomationClient automationClient,\n      @PathParam(\"name\") String name) {\n    secretSeriesDAO.getSecretSeriesByName(name)\n        .orElseThrow(NotFoundException::new);\n    secretDAO.deleteSecretsByName(name);\n    return Response.noContent().build();\n  }",
            "/**\n * Delete a secret series\n *\n * @excludeParams automationClient\n * @param name Secret series name\n *\n * @responseMessage 204 Secret series deleted\n * @responseMessage 404 Secret series not found\n */\n",
            "@DELETE @Timed @Metered(name=\"QPS\") @ExceptionMetered(name=\"ExceptionQPS\")\n  @Path(\"{name}\")\n  public Response deleteSecretSeries(@Auth AutomationClient automationClient,\n      @PathParam(\"name\") String name) {\n    secretSeriesDAO.getSecretSeriesByName(name)\n        .orElseThrow(NotFoundException::new);\n    secretDAO.deleteSecretsByName(name);\n    return Response.noContent().build();\n  }",
            "/**\n * Delete a secret series\n *\n * @excludeParams automationClient\n * @param name Secret series name\n *\n * @responseMessage 204 Secret series deleted\n * @responseMessage 404 Secret series not found\n */\n"
        ],
        "test_db": [
            "7f6c1ae311df6243fee478c054c5bb4c8a847bce",
            "square/keywhiz",
            "/data/comment_repos/square@keywhiz",
            "deleteSecretSeries",
            "/data/comment_repos/square@keywhiz/server/src/test/java/keywhiz/service/resources/automation/v2/SecretResourceTest.java",
            "deleteSecretSeries_notFound",
            "  @Test public void deleteSecretSeries_notFound() throws Exception {\n    assertThat(deleteSeries(\"non-existent\").code()).isEqualTo(404);\n  }",
            "@Timed\n  @DELETE\n  @Path(\"{name}\")\n  public Response deleteSecretSeries(@Auth AutomationClient automationClient,\n      @PathParam(\"name\") String name) {\n    secretSeriesDAO.getSecretSeriesByName(name)\n        .orElseThrow(NotFoundException::new);\n    secretDAO.deleteSecretsByName(name);\n    return Response.noContent().build();\n  }",
            "server/src/main/java/keywhiz/service/resources/automation/v2/SecretResource.java",
            "@Timed @ExceptionMetered\n  @DELETE\n  @Path(\"{name}\")\n  public Response deleteSecretSeries(@Auth AutomationClient automationClient,\n      @PathParam(\"name\") String name) {\n    secretSeriesDAO.getSecretSeriesByName(name)\n        .orElseThrow(NotFoundException::new);\n    secretDAO.deleteSecretsByName(name);\n    return Response.noContent().build();\n  }",
            "server/src/main/java/keywhiz/service/resources/automation/v2/SecretResource.java"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "DELETE",
                "DELETE",
                "equal"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Timed",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Metered",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "name",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "QPS",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "",
                "@",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "Metered",
                "insert"
            ],
            [
                "",
                "(",
                "insert"
            ],
            [
                "",
                "name",
                "insert"
            ],
            [
                "",
                "=",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                "Exception",
                "insert"
            ],
            [
                "",
                "<con>",
                "insert"
            ],
            [
                "",
                "QPS",
                "insert"
            ],
            [
                "",
                "\"",
                "insert"
            ],
            [
                "",
                ")",
                "insert"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "public",
                "public",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Secret",
                "Secret",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Series",
                "Series",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Auth",
                "Auth",
                "equal"
            ],
            [
                "Automation",
                "Automation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                "automation",
                "automation",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Client",
                "Client",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Path",
                "Path",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Param",
                "Param",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                "\"",
                "\"",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "secret",
                "secret",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Series",
                "Series",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DAO",
                "DAO",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Secret",
                "Secret",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Series",
                "Series",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "or",
                "or",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Else",
                "Else",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Throw",
                "Throw",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Not",
                "Not",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Found",
                "Found",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Exception",
                "Exception",
                "equal"
            ],
            [
                "::",
                "::",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "secret",
                "secret",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "DAO",
                "DAO",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "delete",
                "delete",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Secrets",
                "Secrets",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "By",
                "By",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Name",
                "Name",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "name",
                "name",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "return",
                "return",
                "equal"
            ],
            [
                "Response",
                "Response",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "no",
                "no",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Content",
                "Content",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "build",
                "build",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "@Transactional(readOnly = true)@Authorized(PrivilegeConstants.VIEW_LOCATION_ATTRIBUTE_TYPES)LocationAttributeType getLocationAttributeType(Integer id); ",
        "focal_tgt": "@Transactional(readOnly = true)@Authorized(PrivilegeConstants.GET_LOCATION_ATTRIBUTE_TYPES)LocationAttributeType getLocationAttributeType(Integer id); ",
        "test_src": "@Test public void getLocationAttributeType_shouldReturnTheLocationAttributeTypeWithTheGivenId() { executeDataSet(LOC_ATTRIBUTE_DATA_XML); Assert.assertEquals(\"Audit Date\", Context.getLocationService().getLocationAttributeType(1).getName()); } ",
        "label": 0,
        "focal_db": [
            2998746,
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "244b2a5edbd7ad42c2ebdbd9980b45a3d430b24f",
            "4a1942f0c650fd4a65fa9a618b9b952bc83af94d",
            "api/src/main/java/org/openmrs/api/LocationService.java",
            "7e96464496aea4072181c65d61c889a8746e71bc",
            "api/src/main/java/org/openmrs/api/LocationService.java",
            "@Transactional(readOnly = true)\r\n\t@Authorized(PrivilegeConstants.VIEW_LOCATION_ATTRIBUTE_TYPES)\r\n\tLocationAttributeType getLocationAttributeType(Integer id);",
            "/**\n * @param id\n * @return the {@link LocationAttributeType} with the given internal id\n * @since 1.9\n * @should return the location attribute type with the given id\n * @should return null if no location attribute type exists with the given id\n */\n",
            "@Transactional(readOnly = true)\r\n\t@Authorized(PrivilegeConstants.GET_LOCATION_ATTRIBUTE_TYPES)\r\n\tLocationAttributeType getLocationAttributeType(Integer id);",
            "/**\n * @param id\n * @return the {@link LocationAttributeType} with the given internal id\n * @since 1.9\n * @should return the location attribute type with the given id\n * @should return null if no location attribute type exists with the given id\n */\n"
        ],
        "test_db": [
            "244b2a5edbd7ad42c2ebdbd9980b45a3d430b24f",
            "openmrs/openmrs-core",
            "/data/comment_repos/openmrs@openmrs-core",
            "getLocationAttributeType",
            "/data/comment_repos/openmrs@openmrs-core/api/src/test/java/org/openmrs/api/LocationServiceTest.java",
            "getLocationAttributeType_shouldReturnTheLocationAttributeTypeWithTheGivenId",
            "\t@Test\n\tpublic void getLocationAttributeType_shouldReturnTheLocationAttributeTypeWithTheGivenId() {\n\t\texecuteDataSet(LOC_ATTRIBUTE_DATA_XML);\n\t\tAssert.assertEquals(\"Audit Date\", Context.getLocationService().getLocationAttributeType(1).getName());\n\t}",
            "@Transactional(readOnly = true)\r\n\t@Authorized(PrivilegeConstants.VIEW_LOCATION_ATTRIBUTE_TYPES)\r\n\tLocationAttributeType getLocationAttributeType(Integer id);",
            "api/src/main/java/org/openmrs/api/LocationService.java",
            "@Transactional(readOnly = true)\r\n\t@Authorized(PrivilegeConstants.GET_LOCATION_ATTRIBUTE_TYPES)\r\n\tLocationAttributeType getLocationAttributeType(Integer id);",
            "api/src/main/java/org/openmrs/api/LocationService.java"
        ],
        "edit_seq": [
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Transactional",
                "Transactional",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "read",
                "read",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Only",
                "Only",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "true",
                "true",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "@",
                "@",
                "equal"
            ],
            [
                "Authorized",
                "Authorized",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Privilege",
                "Privilege",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Constants",
                "Constants",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "VIEW",
                "GET",
                "replace"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "LOCATION",
                "LOCATION",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "ATTRIBUTE",
                "ATTRIBUTE",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "_",
                "_",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "TYPES",
                "TYPES",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Location",
                "Location",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Attribute",
                "Attribute",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Type",
                "Type",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "Integer",
                "Integer",
                "equal"
            ],
            [
                "id",
                "id",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ]
        ]
    },
    {
        "focal_src": "public static void insert(String key, String keyword, String nature, int freq) { Forest dic = get(key); if(dic == null) { dic = putIfAbsent(DEFAULT, DEFAULT, new Forest()); } String[]paramers = new String[2]; paramers[0] = nature; paramers[1] = String.valueOf(freq); Value value = new Value(keyword, paramers); Library.insertWord(dic, value); } ",
        "focal_tgt": "public static void insert(String key, String keyword, String nature, int freq) { Forest dic = get(key); String[]paramers = new String[2]; paramers[0] = nature; paramers[1] = String.valueOf(freq); Value value = new Value(keyword, paramers); Library.insertWord(dic, value); } ",
        "test_src": "@Test public void insertTest() { DicLibrary.insert(DicLibrary.DEFAULT, \"\u589e\u52a0\u65b0\u8bcd\", \"\u6211\u662f\u8bcd\u6027\", 1000); Result parse = DicAnalysis.parse(\"\u8fd9\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u589e\u52a0\u65b0\u8bcd\u7684\u4f8b\u5b50\"); System.out.println(parse); boolean flag = false; for(Term term : parse) { flag = flag || \"\u589e\u52a0\u65b0\u8bcd\".equals(term.getName()); } Assert.assertTrue(flag); } ",
        "label": 0,
        "focal_db": [
            2873926,
            "NLPchina/ansj_seg",
            "/data/comment_repos/NLPchina@ansj_seg",
            "9c246c9de967595bf7282e8e758d4f574da32f78",
            "1b85e0bed432c429a42bb220789cd4ccfa699548",
            "src/main/java/org/ansj/library/DicLibrary.java",
            "0e0f1ce860fb6b448f8ec6bce97538d59d18e0bd",
            "src/main/java/org/ansj/library/DicLibrary.java",
            "public static void insert(String key, String keyword, String nature, int freq) {\n\t\tForest dic = get(key);\n\n\t\tif (dic == null) {\n\t\t\tdic = putIfAbsent(DEFAULT, DEFAULT, new Forest());\n\t\t}\n\n\t\tString[] paramers = new String[2];\n\t\tparamers[0] = nature;\n\t\tparamers[1] = String.valueOf(freq);\n\t\tValue value = new Value(keyword, paramers);\n\t\tLibrary.insertWord(dic, value);\n\t}",
            "/**\n * \u5173\u952e\u8bcd\u589e\u52a0\n *\n * @param keyword \u6240\u8981\u589e\u52a0\u7684\u5173\u952e\u8bcd\n * @param nature \u5173\u952e\u8bcd\u7684\u8bcd\u6027\n * @param freq \u5173\u952e\u8bcd\u7684\u8bcd\u9891\n */\n",
            "public static void insert(String key, String keyword, String nature, int freq) {\n\t\tForest dic = get(key);\n\t\tString[] paramers = new String[2];\n\t\tparamers[0] = nature;\n\t\tparamers[1] = String.valueOf(freq);\n\t\tValue value = new Value(keyword, paramers);\n\t\tLibrary.insertWord(dic, value);\n\t}",
            "/**\n * \u5173\u952e\u8bcd\u589e\u52a0\n *\n * @param keyword \u6240\u8981\u589e\u52a0\u7684\u5173\u952e\u8bcd\n * @param nature \u5173\u952e\u8bcd\u7684\u8bcd\u6027\n * @param freq \u5173\u952e\u8bcd\u7684\u8bcd\u9891\n */\n"
        ],
        "test_db": [
            "9c246c9de967595bf7282e8e758d4f574da32f78",
            "NLPchina/ansj_seg",
            "/data/comment_repos/NLPchina@ansj_seg",
            "insert",
            "/data/comment_repos/NLPchina@ansj_seg/src/test/java/org/ansj/library/DicLibraryTest.java",
            "insertTest",
            "\t@Test\n\tpublic void insertTest() {\n\t\tDicLibrary.insert(DicLibrary.DEFAULT, \"\u589e\u52a0\u65b0\u8bcd\", \"\u6211\u662f\u8bcd\u6027\", 1000);\n\t\tResult parse = DicAnalysis.parse(\"\u8fd9\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\u589e\u52a0\u65b0\u8bcd\u7684\u4f8b\u5b50\");\n\t\tSystem.out.println(parse);\n\t\tboolean flag = false;\n\t\tfor (Term term : parse) {\n\t\t\tflag = flag || \"\u589e\u52a0\u65b0\u8bcd\".equals(term.getName());\n\t\t}\n\t\tAssert.assertTrue(flag);\n\n\t}",
            "public static void insert(String key, String keyword, String nature, int freq) {\n\t\tForest dic = get(key);\n\n\t\tif (dic == null) {\n\t\t\tdic = putIfAbsent(DEFAULT, DEFAULT, new Forest());\n\t\t}\n\n\t\tString[] paramers = new String[2];\n\t\tparamers[0] = nature;\n\t\tparamers[1] = String.valueOf(freq);\n\t\tValue value = new Value(keyword, paramers);\n\t\tLibrary.insertWord(dic, value);\n\t}",
            "src/main/java/org/ansj/library/DicLibrary.java",
            "public static void insert(String key, String keyword, String nature, int freq) {\n\t\tForest dic = get(key);\n\t\tString[] paramers = new String[2];\n\t\tparamers[0] = nature;\n\t\tparamers[1] = String.valueOf(freq);\n\t\tValue value = new Value(keyword, paramers);\n\t\tLibrary.insertWord(dic, value);\n\t}",
            "src/main/java/org/ansj/library/DicLibrary.java"
        ],
        "edit_seq": [
            [
                "public",
                "public",
                "equal"
            ],
            [
                "static",
                "static",
                "equal"
            ],
            [
                "void",
                "void",
                "equal"
            ],
            [
                "insert",
                "insert",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "keyword",
                "keyword",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "nature",
                "nature",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "int",
                "int",
                "equal"
            ],
            [
                "freq",
                "freq",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                "{",
                "{",
                "equal"
            ],
            [
                "Forest",
                "Forest",
                "equal"
            ],
            [
                "dic",
                "dic",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "get",
                "get",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "key",
                "key",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "if",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "dic",
                "",
                "delete"
            ],
            [
                "==",
                "",
                "delete"
            ],
            [
                "null",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                "{",
                "",
                "delete"
            ],
            [
                "dic",
                "",
                "delete"
            ],
            [
                "=",
                "",
                "delete"
            ],
            [
                "put",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "If",
                "",
                "delete"
            ],
            [
                "<con>",
                "",
                "delete"
            ],
            [
                "Absent",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                "DEFAULT",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "DEFAULT",
                "",
                "delete"
            ],
            [
                ",",
                "",
                "delete"
            ],
            [
                "new",
                "",
                "delete"
            ],
            [
                "Forest",
                "",
                "delete"
            ],
            [
                "(",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ")",
                "",
                "delete"
            ],
            [
                ";",
                "",
                "delete"
            ],
            [
                "}",
                "",
                "delete"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "paramers",
                "paramers",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "2",
                "2",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "paramers",
                "paramers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "0",
                "0",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "nature",
                "nature",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "paramers",
                "paramers",
                "equal"
            ],
            [
                "[",
                "[",
                "equal"
            ],
            [
                "1",
                "1",
                "equal"
            ],
            [
                "]",
                "]",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "String",
                "String",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Of",
                "Of",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "freq",
                "freq",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                "=",
                "=",
                "equal"
            ],
            [
                "new",
                "new",
                "equal"
            ],
            [
                "Value",
                "Value",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "keyword",
                "keyword",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "paramers",
                "paramers",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "Library",
                "Library",
                "equal"
            ],
            [
                ".",
                ".",
                "equal"
            ],
            [
                "insert",
                "insert",
                "equal"
            ],
            [
                "<con>",
                "<con>",
                "equal"
            ],
            [
                "Word",
                "Word",
                "equal"
            ],
            [
                "(",
                "(",
                "equal"
            ],
            [
                "dic",
                "dic",
                "equal"
            ],
            [
                ",",
                ",",
                "equal"
            ],
            [
                "value",
                "value",
                "equal"
            ],
            [
                ")",
                ")",
                "equal"
            ],
            [
                ";",
                ";",
                "equal"
            ],
            [
                "}",
                "}",
                "equal"
            ]
        ]
    }
]